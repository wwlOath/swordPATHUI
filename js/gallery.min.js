"use strict";
var LinkCache = function(o, r) {
  var s, a, l = 0, c = {}, n = this;
  this.push = function(e, t) {
    var n = c[e];
    if (n) {
      if (1 == l || n == a)
        return;
      n.next && (n.next.pre = n.pre),
      n.pre && (n.pre.next = n.next),
      n == s && (s = n.next),
          n.next = null
    } else
      c[e] = n = {
        key: e,
        pre: null,
        next: null,
        data: t
      },
          l++;
    if (1 == l ? s = a = n : ((a.next = n).pre = a,
        a = n),
    o < l) {
      var i = s;
      s.next.pre = null,
          delete c[s.key],
          s = s.next,
          l--,
      r && r(i)
    }
  }
      ,
      this.get = function(e) {
        var t = c[e];
        return t && n.push(e),
        t && t.data
      }
      ,
      this.first = function() {
        return s
      }
      ,
      this.rest = function() {
        s = a = null,
            c = {},
            l = 0
      }
};
angular.module("gallery", ["gallery.home", "gallery.search", "gallery.wiki", "gallery.app", "gallery.manageUploader", "gallery.about", "gallery.myRelevantUC", "gallery.myFavorite", "gallery.album", "gallery.subject", "gallery.userCenter", "gallery.app.object", "gallery.app.training", "gallery.sv"]),
    angular.module("gallery.base", ["ngResource", "mKit"]).config(["$httpProvider", function(e) {
      e.interceptors.push(["$q", function(e) {
        return {
          request: function(e) {
            return 0 === e.url.indexOf("http") || 0 === e.url.indexOf("/MoticKit/libs/tmpl/") || e.url.endWith(".tmpl") || 0 === e.url.indexOf("/MoticGallery/") || 0 === e.url.indexOf("/MoticLab/") || 0 === e.url.indexOf("/Account/") || (e.url = vm.apiPath + e.url),
                e
          }
        }
      }
      ]),
          e.interceptors.push(["$q", function(e) {
            return mAppSigInterceptors(vm.apiPath, vm.token)
          }
          ]),
          e.interceptors.push("SessionExpired"),
      (window.ActiveXObject || "ActiveXObject"in window || -1 != navigator.userAgent.indexOf("Edge")) && (e.defaults.headers.get || (e.defaults.headers.get = {}),
          e.defaults.headers.get["If-Modified-Since"] = "0")
    }
    ]).run(["mLogin", "$rootScope", function(e, t) {
      t.vm = vm,
          e.setPath(t.vm.ContextPath + "/Medikal/images/loading.gif")
    }
    ]).directive("mgRepeatFinish", function() {
      return {
        link: function(e, t, n) {
          1 == e.$last && (setTimeout(function() {
            $(window).trigger("scrollstop")
          }, 1),
          n.mgRepeatFinish && e.$eval(n.mgRepeatFinish))
        }
      }
    }).directive("mgFormCommit", [function() {
      return {
        require: "form",
        link: function(e, t, n, i) {
          i.commit = function() {
            t.find("[type='submit']").click()
          }
        }
      }
    }
    ]).directive("mgAvatarLoad", [function() {
      return {
        link: function(e, t, n, i) {
          t.bind("load", function() {
            var e = (this.naturalHeight || this.height) / (this.naturalWidth || this.width);
            (1.1 < e || e < .9) && (this.parentElement.style.borderColor = "#FFF")
          })
        }
      }
    }
    ]).directive("mgAvatar", ["mUser", function(i) {
      return {
        template: '<img m-img-lazy="{{src}}" mg-avatar-load="" placeholder="{{placeholder}}">',
        replace: !0,
        compile: function() {
          return {
            pre: function(e, t, n) {
              e.src = i.avatar(n.mgAvatar),
                  e.placeholder = i.avatar("default")
            }
          }
        }
      }
    }
    ]).directive("mgSrcHtml", [function() {
      return {
        scope: {
          html: "@mgSrcHtml"
        },
        link: function(e, t, n) {
          var i = !!window.clipboardData;
          e.$watch("html", function(e) {
            i ? t.contents().find("html").html(e) : t.attr("src", "data:text/html;charset=utf-8," + encodeURIComponent(e))
          })
        }
      }
    }
    ]).directive("mgMessage", ["$http", function(t) {
      return {
        scope: {
          id: "@mgMessage",
          close: "&"
        },
        replace: !0,
        templateUrl: "mg-message.tmpl",
        controller: ["$scope", function(e) {
          e.send = function() {
            e.sending = !0,
                t.post("/Users/SMS", $.param({
                  userId: e.id,
                  content: e.content
                }), {
                  headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                  }
                }).success(function() {
                  e.sending = !1,
                      e.content = "",
                      e.close()
                }).error(function() {
                  e.sending = !1
                })
          }
        }
        ]
      }
    }
    ]).directive("mgMessagePopover", ["$compile", function(o) {
      return {
        scope: {
          id: "@mgMessagePopover"
        },
        link: function(e, t, n) {
          e.close = function() {
            t.tooltipster("hide")
          }
          ;
          var i = o('<div mg-message="{{id}}" close="close()"></div>')(e);
          t.tooltipster({
            trigger: "click",
            content: i,
            contentCloning: !1,
            interactive: !0,
            onlyOne: !0,
            position: "bottom-left",
            theme: "tooltipster-shadow",
            offsetY: -4,
            functionBefore: function(e, t) {
              t(),
                  i.find("textarea").select()
            }
          })
        }
      }
    }
    ]).directive("mgShareQr", ["$compile", function(e) {
      return {
        scope: {
          url: "@mgShareQr"
        },
        link: function(n, e, t) {
          var i = angular.element("<img />");
          e.tooltipster({
            trigger: "click",
            content: i,
            contentCloning: !1,
            interactive: !0,
            onlyOne: !0,
            position: "bottom-left",
            theme: "tooltipster-shadow",
            offsetY: -4,
            functionBefore: function(e, t) {
              t(),
                  i.attr("src", n.url)
            }
          })
        }
      }
    }
    ]).directive("mgFocus", function() {
      return {
        link: function(e, t, n) {
          e.$watch(n.mgFocus, function(e) {
            e && setTimeout(function() {
              t.select()
            }, 1)
          })
        }
      }
    }).directive("mgTooltip", ["$document", function(a) {
      return {
        link: function(n, i, t) {
          var o = i.children()
              , e = t.mgTooltip
              , r = t.tipClone ? "true" == t.tipClone : !!e;
          function s(e) {
            return e.tooltipster({
              trigger: "click",
              content: o,
              contentCloning: r,
              interactive: !0,
              onlyOne: !0,
              position: "bottom-left",
              theme: "tooltipster-shadow " + t.tipClass,
              offsetY: -4,
              functionBefore: function(e, t) {
                n.$broadcast("tooltip:show"),
                    t(),
                    i.find("input:first,textarea:first").eq(0).select()
              }
            })
          }
          e ? a.delegate(e, "click", function() {
            this.tip || (this.tip = !0,
                s($(this)).tooltipster("show"))
          }) : s(i.siblings(".tip-btn"))
        }
      }
    }
    ]).directive("mgFilterSort", ["ipCookie", "$timeout", function(r, s) {
      return {
        scope: {
          q: "=filter",
          o: "=order",
          options: "=options"
        },
        template: '<div class="al_triangle"></div>                     <div class="search-form-wrapper " >                  <div class="al_filter_search">                    <div class="type-icon">            <span><i class="fa fa-filter text-theme-colored"></i></span>            </div>              <form id="searchform" class="m-0" method="get">              <input class="" type="text" name="s" id="searchinput" value="Enter your search" ng-model="q" placeholder="{{searchfilter}}">              </form>                  </div>          </div>                  <div class="btn-group"  ng-class="{open:$parent.vm.buttonDropdown}" ng-click="$parent.vm.buttonDropdown=!$parent.vm.buttonDropdown;">                      <button aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" class="btn btn-default btn-sm dropdown-toggle" type="button" >                      {{label}}<span class="caret"></span>                      </button>                      <ul class="dropdown-menu">                          <li ng-repeat="(k,option) in options" ng-click="select(k,option);"><a href="javascript:">{{option.label}}</a></li>                      </ul>                  </div>                   <div class="clearfix"></div>',
        controller: ["$scope", function(n) {
          n.select = function(e, t) {
            n.label = t.label,
                n.o = t.value,
                r("sort", e, {
                  expires: 365,
                  path: "/"
                })
          }
          ;
          var e, t = r("sort") || "t1", i = n.options[t];
          function o() {
            s.cancel(e),
                e = s(function() {
                  $(window).trigger("scrollstop")
                }, 1e3)
          }
          n.label = i.label,
              n.o = i.value,
              n.searchfilter = vm.searchfilter,
              n.$watch("q", o),
              n.$watch("o", o)
        }
        ]
      }
    }
    ]).controller("headerCtrl", ["$scope", function(n) {
      var i = "conf_search_type";
      n.type = localStorage.getItem(i) || "uc",
          n.changeType = function(e, t) {
            localStorage.setItem(i, t),
                n.type = t,
                setTimeout(function() {
                  e.commit()
                }, 10)
          }
    }
    ]).service("Catalog", ["$resource", function(t) {
      return function(e) {
        return t("/Users/:ucId/" + e + "/:id", {
          ucId: "@ucId",
          id: "@id"
        }, {
          save: {
            method: "POST",
            params: {
              title: "@title",
              parentId: "@parentId",
              seq: "@seq"
            }
          },
          update: {
            method: "PUT"
          }
        })
      }
    }
    ]).directive("mgCatalog", ["$timeout", "Catalog", "mMessenger", function(o, e, t) {
      return {
        template: '<div class="categories" style="margin-left: 0;" ui-tree="treeOptions" ng-if="nodes.length>0">                    <ol class="nav nav-pills nav-stacked" ui-tree-nodes="" ng-model="nodes" id="tree-root" >                        <li ng-repeat="node in nodes" ng-init="level=1" ui-tree-node ng-include="\'/tmpl/catalogNode.html\'"></li>                    </ol></div>',
        scope: {
          opt: "=mgCatalog"
        },
        controllerAs: "ctrl",
        controller: ["$scope", function(r) {
          (this.scope = r).vm = {};
          var i = r.opt
              , s = e(i.module);
          function a(e, t, n) {
            for (var i = t; i < e.length && i + n - t == e[i].seq; i++)
              e[i].seq++
          }
          function l(e) {
            t.error(r.vm.msg.saveError + " " + e.status + " " + e.data.ErrorType)
          }
          function n() {
            return 0 == r.nodes.length && i.edit && (r.nodes.push(new s({
              parentId: 0,
              title: "",
              edit: !0,
              isNew: !0,
              ucId: i.ucId,
              seq: 0,
              force: !0
            })),
                r.vm.node = null,
                1)
          }
          r.nodes = s.query({
            ucId: i.ucId
          }, function(e) {
            if (!n()) {
              var t = i.active ? function e(t, n) {
                for (var i = 0; i < n.length; i++) {
                  var o = n[i];
                  if (o.id == t)
                    return o;
                  if (o.nodes) {
                    var r = e(t, o.nodes);
                    if (r)
                      return r
                  }
                }
              }(i.active, r.nodes) : r.nodes[0];
              r.select(t, !0)
            }
            i.load && i.load(e)
          }),
              r.focus = function(e) {
                e.$element.find("input").select()
              }
              ,
              r.expandCurrent = function(e, t) {
                i.active == t.id && o(function() {
                  e.$emit("angular-ui-tree:expand-all")
                })
              }
              ,
              r.moveLevel = function(e, t) {
                var n = e.$modelValue;
                if (1 == t) {
                  if (!(i = e.$parentNodeScope))
                    return;
                  o = i.index(),
                      (i = i.$parentNodeScope) ? (i = i.$modelValue,
                          n.parentId = i.id,
                          i = i.nodes) : (i = r.nodes,
                          n.parentId = 0),
                      i.splice(o + 1, 0, n),
                      n.seq = i[o].seq + 1
                } else {
                  var i, o = e.index();
                  if (1 == (i = (i = e.$parentNodeScope) ? i.$modelValue.nodes : r.nodes).length)
                    return;
                  i = i[o - 1],
                      n.parentId = i.id,
                      o = i.nodes.push(n) - 1,
                      n.seq = o && i.nodes[o - 1].seq + 1
                }
                e.remove(),
                    s.update(n, function() {
                      1 == t && a(i, o + 2, n.seq)
                    }, l)
              }
              ,
              r.select = function(e, t) {
                (r.vm.node = e) && (this.href = "##" + e.id),
                i.select && i.select(e, t)
              }
              ,
              r.addNode = function(e) {
                var t = e.$modelValue
                    , n = t.nodes;
                n.push(new s({
                  parentId: t.id,
                  title: "",
                  edit: !0,
                  isNew: !0,
                  ucId: i.ucId,
                  content: "",
                  seq: (0 < n.length && n[n.length - 1].seq) + 1 || 0
                })),
                    e.expand()
              }
              ,
              r.deleteNode = function() {
                var e = r.vm.forDelWiki
                    , t = e.$modelValue;
                s.remove({
                  ucId: t.ucId,
                  id: t.id
                }, function() {
                  e.remove(),
                      o(function() {
                        n() ? r.select() : r.select(r.nodes[0])
                      })
                }, l)
              }
              ,
              r.cancelEdit = function(e) {
                var t = e.$modelValue;
                t.isNew ? e.remove() : t.edit = !1
              }
              ,
              r.save = function(e) {
                var t = e.$modelValue;
                t.title = e.clone,
                    t.isNew ? t.$save(function() {
                      delete t.isNew,
                          delete t.force,
                          t.edit = !1,
                      e.vm.node || r.select(t)
                    }, l) : s.update(t, function() {
                      t.edit = !1
                    }, l)
              }
              ,
              r.treeOptions = {
                beforeDrag: function(e) {
                  return i.edit && (1 < r.nodes.length || e.$parentNodeScope)
                },
                dropped: function(e) {
                  var t = e.source.nodeScope.$modelValue;
                  t.seq = e.dest.index && e.dest.nodesScope.$modelValue[e.dest.index - 1].seq + 1;
                  var n = e.dest.nodesScope.$nodeScope;
                  t.parentId = n && n.$modelValue.id || 0,
                      s.update(t, function() {
                        a(e.dest.nodesScope.$modelValue, e.dest.index + 1, t.seq)
                      }, l)
                }
              },
              r.collapseNode = function(e) {
                o(function() {
                  try {
                    0 < e.$childNodesScope.$modelValue.length && e.collapse()
                  } catch (e) {}
                })
              }
              ,
              r.toggleCollapsed = function(e) {
                e.toggle()
              }
        }
        ],
        link: function(e, t, n) {}
      }
    }
    ]).directive("mTagUser", ["mUser", function(r) {
      return {
        restrict: "A",
        replace: !1,
        scope: {
          users: "=mTagUser"
        },
        link: function(n, i, e) {
          i.tagsinput({
            maxTags: 100,
            itemValue: "Id",
            itemText: "Name",
            tagClass: "btn  btn-grey-darken btn-flat btn-xs addUsersB",
            typeaheadjs: [{
              highlight: !0,
              hint: !0
            }, {
              name: "sso-input",
              displayKey: "Name",
              source: r.adapter()
            }]
          }),
              i.tagsinput("input").bind("typeahead:idle", function() {
                var t = $(this)
                    , e = t.typeahead("val");
                e && r.adapter().search(e, function(e) {}, function(e) {
                  1 != e.length ? t[0].style.textDecoration = "line-through" : i.tagsinput("add", e[0])
                })
              }).bind("typeahead:active", function() {
                this.style.textDecoration = ""
              }),
              i.on("itemAdded", function(e) {
                e.options || (n.users.push(e.item.Id),
                    setTimeout(function() {
                      n.$apply()
                    }, 1))
              }).on("itemRemoved", function(e) {
                var t = n.users.indexOf(e.item.Id);
                -1 < t && (n.users.splice(t, 1),
                    setTimeout(function() {
                      n.$apply()
                    }, 1))
              });
          var t = !1
              , o = n.$watchCollection("users", function() {
            t ? t = !1 : n.users instanceof Array ? (o(),
                r.get(n.users, function(e) {
                  var n = !!"".localeCompare;
                  e.sort(function(e, t) {
                    return e = e.Name,
                        t = t.Name,
                        n ? e.localeCompare(t) : t < e ? 1 : -1
                  });
                  for (var t = 0; t < e.length; t++)
                    i.tagsinput("add", e[t], !0)
                })) : (t = !0,
                n.users = [])
          });
          n.$on("m:tag:user:add", function(e, t) {
            i.tagsinput("add", t)
          }),
              n.$on("m:tag:user:remove", function(e, t) {
                i.tagsinput("remove", t.Id)
              })
        }
      }
    }
    ]).directive("mgVisibleRange", ["$document", "$timeout", "$http", function(e, t, s) {
      return {
        templateUrl: "/../tmpls/visible-range.html",
        scope: {
          val: "=mgVisibleRange",
          share: "=share",
          vrModel: "=model"
        },
        controller: ["$scope", function(n) {
          var i, o;
          n.changeGroup = function(e) {
            if (e.checked)
              i.push(e.id);
            else {
              var t = i.indexOf(e.id);
              i.splice(t, 1)
            }
          }
              ,
              n.groupUser = {},
              n.expandGroup = function(t) {
                n.groupUser[t] || s.get("/Groups/" + t + "/Members").success(function(e) {
                  n.groupUser[t] = e
                })
              }
              ,
              n.isCheck = function(e) {
                return e.checked = -1 < o.indexOf(e.userId),
                    e.checked
              }
              ,
              n.toggleUser = function(e) {
                n.$broadcast(e.checked ? "m:tag:user:add" : "m:tag:user:remove", {
                  Id: e.userId,
                  Name: e.name
                })
              }
          ;
          var r = n.$watch("val", function(e, t) {
            3 == e && (function() {
              if (i)
                return;
              var e = n.share || (n.share = {});
              i = e.groups || (e.groups = []),
                  o = e.users || (e.users = []);
              var t = {};
              n.share && n.share.groups && (t.params = {
                groupId: n.share.groups
              });
              s.get("/Groups", t).success(function(e) {
                for (var t = 0; t < e.length && 0 < i.length; t++)
                  e[t].checked = -1 < i.indexOf(e[t].id);
                n.groups = e
              })
            }(),
                r())
          })
        }
        ],
        link: function(e, t) {
          t.addClass("vr")
        }
      }
    }
    ]),
    angular.module("gallery.mg-subjects", ["gallery.base"]).service("Album", ["$resource", "$http", function(e, i) {
      var t = e("/Users/:ucId/Albums/:id", {
        ucId: "@ucId",
        id: "@id"
      }, {
        save: {
          method: "POST",
          params: {
            name: "@name",
            parentId: "@parentId",
            hidden: "@hidden"
          }
        },
        update: {
          method: "PUT"
        },
        updateShare: {
          url: "/Users/:ucId/Albums/:id/Share",
          method: "PUT"
        }
      });
      return t.thumbnails = function(e) {
        var t = "/Users/" + e.userCenterId + "/Albums/" + e.id + "/Thumbnails"
            , n = [];
        return i.get(t).success(function(e) {
          for (var t = 0; t < e.length; t++)
            n.push(e[t])
        }),
            n
      }
          ,
          t
    }
    ]).service("Subject", ["$resource", "$http", function(e, r) {
      var t = e("/Users/:userCenterId/Albums/:albumId/Subjects/:id", {
        userCenterId: "@userCenterId",
        albumId: "@albumId",
        id: "@id"
      }, {
        update: {
          method: "PUT"
        },
        move: {
          method: "PATCH"
        },
        like: {
          method: "PUT",
          url: "/Users/:userCenterId/Albums/:albumId/Subjects/:id/Like"
        },
        unLike: {
          method: "DELETE",
          url: "/Users/:userCenterId/Albums/:albumId/fas/:id/Like"
        }
      });
      return t.moveSlides = function(e, t, n, i, o) {
        return r({
          method: "PATCH",
          url: "/Users/" + e + "/Albums/" + t + "/Subjects/" + n + "/Slides?newSubId=" + i,
          data: o
        })
      }
          ,
          t
    }
    ]).filter("visibleRange", [function() {
      return function(e) {
        return vrText[e]
      }
    }
    ]).directive("mgAlbumCatalogue", [function() {
      return {
        replace: !0,
        templateUrl: "albumCatalogue.tmpl"
      }
    }
    ]).directive("mgSubjectCatalogue", [function() {
      return {
        replace: !0,
        templateUrl: "subjectCatalogue.tmpl"
      }
    }
    ]).service("AlbumSelect", ["$compile", "$document", "$q", "$rootScope", "mModalBackdrop", "Album", function(e, t, i, n, o, r) {
      var s, a, l, c = n.$new(!0);
      c.$watch("q", function(e) {
        c.selected = -1
      }),
          c.close = function(e) {
            !0 !== e && e.target !== e.currentTarget || (o.hide(),
                c.isShown = !1,
                c.selected = -1)
          }
          ,
          c.select = function(e, t) {
            c.selected = e,
                l = t
          }
          ,
          c.selectAlbum = function() {
            0 <= c.selected && (s.resolve(l),
                c.close(!0))
          }
          ,
          c.createAlbum = function() {
            if (c.newAlbumName || 0 == c.newAlbumName) {
              var e = new r({
                userCenterId: a,
                name: c.newAlbumName
              });
              e.$save(function() {
                c.newAlbumName = "",
                    c.isNew = !1,
                    c.order = "CreateTime",
                    c.reverse = !1,
                    c.selected = c.albums.push(e) - 1
              })
            }
          }
      ;
      var u = e("<div mg-album-catalogue></div>")(c);
      t.find("body").append(u);
      this.show = function(e, t) {
        var n;
        return s || (a = n = e,
            c.albums = r.query({
              ucId: n
            })),
            s = i.defer(),
            o.show({
              close: function() {
                c.close(!0)
              }
            }),
            c.q = "",
            c.isShown = !0,
            c.filter = function(e) {
              return !t || -1 == t.indexOf(e.id)
            }
            ,
            s.promise
      }
    }
    ]).service("SubjectSelect", ["$compile", "$document", "$q", "$rootScope", "mModalBackdrop", function(e, t, n, i, o) {
      var r, s, a = i.$new(!0);
      a.$watch("q", function(e) {
        a.selected = -1
      }),
          a.close = function(e) {
            !0 !== e && e.target !== e.currentTarget || (o.hide(),
                a.isShown = !1,
                a.selected = -1)
          }
          ,
          a.select = function(e, t) {
            a.selected = e,
                s = t
          }
          ,
          a.selectSubject = function() {
            0 <= a.selected && (r.resolve(s),
                a.close(!0))
          }
          ,
          a.createAlbum = function() {
            if (a.newAlbumName || 0 == a.newAlbumName) {
              var e = new Album({
                userCenterId: void 0,
                name: a.newAlbumName
              });
              e.$save(function() {
                a.newAlbumName = "",
                    a.isNew = !1,
                    a.order = "CreateTime",
                    a.reverse = !1,
                    a.selected = a.albums.push(e) - 1
              })
            }
          }
      ;
      var l = e("<div mg-subject-catalogue></div>")(a);
      t.find("body").append(l),
          this.show = function(e, t) {
            return r = n.defer(),
                o.show({
                  close: function() {
                    a.close(!0)
                  }
                }),
                a.q = "",
                a.filter = function(e) {
                  return !t || -1 == t.indexOf(e.id)
                }
                ,
                a.isShown = !0,
                a.subjects = e,
                r.promise
          }
    }
    ]).service("UploadStatus", ["$resource", function(e) {
      return e("/UploadStatus", {}, {
        slideProgress: {
          method: "GET",
          url: "/UploadStatus/SlideProgress"
        }
      })
    }
    ]).directive("mgProgressBar", [function() {
      return {
        scope: {
          progress: "@mgProgressBar"
        },
        template: window.ActiveXObject || "ActiveXObject"in window ? '<div class="mprogress-bar" ng-style="proStr"></div>' : '<div class="mprogress-bar" style="height:{{ progress }};"></div>',
        replace: !0,
        link: function(e, t, n) {
          (window.ActiveXObject || "ActiveXObject"in window) && e.$watch("progress", function() {
            e.proStr = {
              height: e.progress
            }
          })
        }
      }
    }
    ]).service("Category", ["$resource", function(e) {
      var n = {};
      this.init = function(t) {
        if (n[t])
          return n[t];
        var o = n[t] = {
          list: [],
          map: {}
        };
        return e("/Dictionaries/Categories").query(function(e) {
          var i = "desc_" + t;
          angular.forEach(e, function(e) {
            var n = {
              id: e.id,
              desc: e[i]
            };
            o.list.push(n),
                o.map[n.id] = n.desc,
                angular.forEach(e.sub, function(e) {
                  void 0 === n.sub && (n.sub = []);
                  var t = {
                    id: e.id,
                    desc: e[i]
                  };
                  n.sub.push(t),
                      o.map[t.id] = t.desc
                })
          })
        }),
            o
      }
    }
    ]).service("Favorite", ["$resource", function(e) {
      return e("/Users/Favorites/:subjectId", {
        subjectId: "@id"
      }, {
        save: {
          method: "PUT"
        }
      })
    }
    ]).service("Like", ["$resource", function(e) {
      return e("/Users/Likes/:subjectId", {
        subjectId: "@id"
      }, {
        save: {
          method: "PUT"
        }
      })
    }
    ]).directive("mgShareSubject", [function() {
      return {
        templateUrl: "shareSubject.tmpl",
        link: function(e, t, n) {}
      }
    }
    ]).service("SubjectComment", ["$resource", function(e) {
      return e("/Users/:userCenterId/Albums/:albumId/Subjects/:subId/Comments/:id", {
        userCenterId: 0,
        albumId: 0,
        subId: "@subId",
        id: "@id"
      })
    }
    ]).directive("mgSubjects", [function() {
      return {
        scope: {
          vm: "=vm",
          subjects: "=mgSubjects",
          filter: "=?",
          order: "=?",
          type: "=?"
        },
        replace: !0,
        templateUrl: "/tmpl/subject.html",
        controller: ["$scope", "$compile", "$timeout", "Favorite", "Category", "Like", "SubjectComment", "Subject", "AlbumSelect", "SubjectSelect", "mDSM", "UploadStatus", "mMessenger", function(l, i, o, t, e, n, r, a, s, c, u, d, p) {
          l.filterFun = function(e) {
            var t = l.filter;
            return !t || !(t.alb || -1 < parseInt(t.uc)) || t.alb && t.alb == e.albId || -1 < parseInt(t.uc) && t.uc == e.ucId
          }
              ,
              l.attaUrl = function(e, t) {
                var n, i, o, r = l.vm, s = t.name, a = "/MoticGallery/Storage/uc" + (l.type ? e.ucId : r.ucId) + "/" + e.id + "/" + encodeURIComponent(s);
                a = location.protocol + "//" + location.host + a + "?" + $.param((n = a,
                    i = vm.cert,
                    o = Math.random().toString(36).substr(7),
                    {
                      appId: i.appId,
                      se: i.se,
                      random: o,
                      storage: 6,
                      sig: mAppSig(i.token, "GET", n, o)
                    }), !0),
                    t.url = "/MoticKit/XViewer?t=" + s.substring(s.indexOf(".") + 1) + "&url=" + encodeURIComponent(a)
              }
              ,
              l.toggleFavorite = function(e) {
                e.isFav ? new t({
                  id: e.id
                }).$remove(function() {
                  e.isFav = !1,
                      e.favCount--
                }) : new t({
                  id: e.id
                }).$save(function() {
                  e.isFav = !0,
                      e.favCount++
                })
              }
              ,
              l.categoryMap = e.init(l.vm.locale).map,
              l.favoriteRenderFinish = function() {
                THEMEMASCOT.widget.init()
              }
              ,
              l.toggleLike = function(e) {
                e.isLike ? new n({
                  id: e.id
                }).$remove(function() {
                  e.isLike = !1,
                      e.likeCount--
                }) : new n({
                  id: e.id
                }).$save(function() {
                  e.isLike = !0,
                      e.likeCount++
                })
              }
              ,
              l.toggleFavorite = function(e) {
                e.isFav ? new t({
                  id: e.id
                }).$remove(function() {
                  e.isFav = !1,
                      e.favCount--
                }) : new t({
                  id: e.id
                }).$save(function() {
                  e.isFav = !0,
                      e.favCount++
                })
              }
              ,
              l.share = function(e) {
                l.shareIndex = e;
                var t = l.$new(!0);
                t.subject = l.subjects[e],
                    t.origin = l.vm.origin;
                var n = i("<div mg-share-subject></div>")(t);
                o(function() {
                  l.shareContent = n.html()
                }),
                    l.subjectUrl = t.subjectUrl = [l.vm.origin, l.vm.ContextPath, "/Users/", l.vm.ucId, "/Albums/", l.vm.albumId, "?focusub=", l.subjects[e].id].join(""),
                    shareConfig.url = t.subjectUrl,
                    shareConfig.subject = t.subject
              }
              ,
              l.initComment = function(e) {
                0 < e.commentCount && (null == e.comments || 0 == e.comments.length) && (e.comments = r.query({
                  subId: e.id
                }))
              }
              ,
              l.forDelCom = {},
              l.deleteCommentBtn = function(e, t) {
                l.forDelCom.sub = e,
                    l.forDelCom.com = t
              }
              ,
              l.deleteComment = function() {
                var e = l.subjects[l.forDelCom.sub];
                new r({
                  subId: e.id,
                  id: e.comments[l.forDelCom.com].id
                }).$remove(function() {
                  e.comments.splice(l.forDelCom.com, 1),
                      e.commentCount--
                })
              }
              ,
              l.addComment = function(t) {
                new r({
                  subId: t.id,
                  comment: t.newComment
                }).$save(function(e) {
                  null == t.comments && (t.comments = []),
                      t.comments.unshift(e),
                      t.newComment = "",
                      t.commentCount++
                })
              }
              ,
              l.confirmDelSub = function(e) {
                l.vm.forDelSub = e,
                    l.deleteSlidesCount = 0,
                null != e.slides.length && (l.deleteSlidesCount = e.slides.length)
              }
              ,
              l.deleteSubject = function() {
                var t = l.vm.forDelSub;
                t.userCenterId = l.vm.ucId,
                    t.albumId = l.vm.albumId,
                    t.id = t.id,
                    t.$remove(function() {
                      var e = t.slides;
                      l.subjects.splice(l.subjects.indexOf(t), 1),
                      e && angular.forEach(e, function(e) {
                        0 !== e.status && u.deleteSlideTask(e.id)
                      })
                    })
              }
              ,
              l.move = function(t) {
                var n = l.vm;
                s.show(n.ucId, [n.albumId]).then(function(e) {
                  e.id != n.albumId && new a({
                    userCenterId: n.ucId,
                    albumId: n.albumId,
                    id: t.id
                  }).$move({
                    newAlbumId: e.id
                  }, function() {
                    l.subjects.splice(l.subjects.indexOf(t), 1)
                  })
                })
              }
              ,
              l.toggleSelect = function(e, t) {
                null == t.selectCount && (t.selectCount = 0),
                    t.selectCount += (e.selected = !e.selected) ? 1 : -1
              }
              ,
              l.moveSlides = function(s) {
                1 != l.subjects.length ? c.show(l.subjects, [s.id]).then(function(i) {
                  if (s != i) {
                    for (var e = [], o = [], r = s.slides, t = 0; t < r.length; t++)
                      r[t].selected && (o.push(r[t]),
                          e.push(r[t].shadowId));
                    a.moveSlides(vm.ucId, vm.albumId, s.id, i.id, e).success(function() {
                      for (var e = 0; e < o.length; e++) {
                        var t;
                        if (delete o[e].selected,
                        -1 < (t = s.slides.indexOf(o[e]))) {
                          r.splice(t, 1);
                          var n = i.slides;
                          n || (n = [],
                              i.slides = n),
                              n.push(o[e])
                        }
                      }
                    })
                  }
                }) : p.info(l.vm.msg.notSubForMove)
              }
          ;
          var f, m = {}, h = l.vm.uploadingSlides = [], g = function() {
            if (0 !== h.length) {
              o.cancel(f);
              d.slideProgress({
                slides: h
              }, function(e) {
                angular.forEach(e, function(e, t) {
                  var n = m[t];
                  void 0 !== n && (n.status = e.SlideStatus,
                      0 == e.SlideStatus ? (h.splice(h.indexOf(t.toLowerCase()), 1),
                          delete m[t]) : null != e.Progress ? (n.Progress = e.Progress,
                          n.Speed = e.Speed) : void (n.Speed = 0) === n.Progress && (n.Progress = 0))
                })
              }).$promise.finally(function() {
                f = o(g, 4e3)
              })
            }
          };
          l.$watchCollection("subjects", function(e) {
            h.length = 0,
                angular.forEach(e, function(e, t) {
                  angular.forEach(e.slides, function(e, t) {
                    0 !== e.status && (h.push(e.id.toLowerCase()),
                        m[e.id.toLowerCase()] = e)
                  })
                }),
                g()
          })
        }
        ]
      }
    }
    ]),
    angular.module("gallery.home", ["gallery.base"]).service("Home", ["$resource", function(e) {
      var t = "/Home";
      return e("url", {}, {
        getRecommendSubject: {
          url: t + "/Subjects",
          isArray: !0
        },
        getHotUc: {
          url: t + "/UCs?type=HOT",
          isArray: !0
        },
        getNewUc: {
          url: t + "/UCs?type=NEW",
          isArray: !0
        },
        getHotSlide: {
          url: t + "/HotSlide",
          isArray: !0
        }
      })
    }
    ]).controller("homeCtrl", ["$scope", "Home", "ipCookie", function(t, e, n) {
      t.subjectsSlide = [],
          e.getRecommendSubject(function(e) {
            t.subjectsSlide.push(e[(new Date).getSeconds() % e.length])
          }),
          t.hotSpace = e.getHotUc(),
          t.newSpace = e.getNewUc(),
          t.hotSlide = e.getHotSlide(),
          t.renderFinish = function() {
            function e() {
              $(window).width() <= 1e3 ? $.fn.multiscroll.destroy() : $.fn.multiscroll.build()
            }
            $("#multiscroll-container").multiscroll({
              scrollingSpeed: 500,
              anchors: ["first", "second", "third", "fourth", "five", "six", "seven", "eight", "nine"],
              navigation: !0,
              useAnchorsOnLoad: !1,
              afterRender: function() {
                var e = $("<div class='multiscroll-slider-responsive'/>");
                $(".multiscroll-slider").after(e);
                for (var t = $(".multiscroll-slider .ms-left > div > div > section"), n = $(".multiscroll-slider .ms-right > div > div > section"), i = 0; i < t.length; i++)
                  e.append($(t[i]).clone(!0)),
                      e.append($(n[t.length - 1 - i]).clone(!0))
              },
              normalScrollElements: "#header,#active-uc,#new-uc,#technology-slide,#hot-slide,#footer",
              afterResize: e
            }),
                e()
          }
    }
    ]).filter("mgSubjectUrl", ["mSlide", function(t) {
      var e = _ThumbnailHosts[0];
      return e.startsWith("http") || e.startsWith("/") || (e = "//" + e),
          function(e) {
            return t.getFullUrl("/thumbnails/sub-" + e + ".jpg")
          }
    }
    ]),
    angular.module("gallery.search", ["gallery.base"]).service("Search", ["$resource", function(e) {
      return e("/Search", {}, {
        searchUC: {
          method: "GET",
          url: "/Search/UC",
          isArray: !0
        },
        searchSlide: {
          method: "GET",
          url: "/Search.json",
          isArray: !0
        },
        searchCategoryCount: {
          method: "GET",
          url: "/Search/CategoryCount",
          isArray: !0
        }
      })
    }
    ]).controller("searchUCCtrl", ["$scope", "Search", function(e, t) {
      e.searchUCs = t.searchUC({
        q: e.search
      }, function() {
        e.loaded = !0
      })
    }
    ]).factory("SearchSlideLoader", ["Search", function(i) {
      return function(e) {
        var n = this;
        this.slides = [],
            this.isLoadedAll = !1,
            this.isLoading = !1,
            this.nextPage = function() {
              if (!n.isLoadedAll && !n.isLoading) {
                n.isLoading = !0,
                    e.p++;
                var t = i.searchSlide(e, function() {
                  if (n.isLoading = !1,
                  0 !== t.length)
                    for (var e = 0; e < t.length; e++)
                      n.slides.push(t[e]);
                  else
                    n.isLoadedAll = !0
                }
                    .bind(this));
                return t
              }
            }
      }
    }
    ]).controller("searchSlideCtrl", ["$scope", "Search", "SearchSlideLoader", function(e, t, n) {
      e.searchCategoryCounts = t.searchCategoryCount(vm.param),
          e.slidesLoader = new n(vm.param),
          e.slidesLoader.nextPage()
    }
    ]),
    angular.module("gallery.wiki", ["gallery.base", "ui.tree"]).service("Wiki", ["$resource", function(e) {
      return e("/Users/:ucId/Wikis/:id", {
        ucId: "@ucId",
        id: "@id"
      }, {
        save: {
          method: "POST",
          params: {
            title: "@title",
            parentId: "@parentId",
            seq: "@seq"
          }
        },
        update: {
          method: "PUT"
        }
      })
    }
    ]).controller("wikiCtrl", ["$scope", "Wiki", "$timeout", "$location", "mMessenger", function(i, e, t, n, o) {
      var r = n.hash() || i.vm.id;
      i.vm.active = r,
          i.opt = {
            ucId: i.vm.ucId,
            module: "Wikis",
            edit: i.vm.isAdmin,
            active: r,
            select: function(t) {
              console.log("[Select]" + t),
                  null != (i.vm.node = t) ? null == t.content ? e.get({
                    ucId: t.ucId,
                    id: t.id
                  }, function(e) {
                    t.content = e.content,
                        $("#pageContent").html(t.content)
                  }) : $("#pageContent").html(t.content) : $("#pageContent").html("")
            }
          },
          window._bd_share_config = {
            common: {
              bdSign: "normal",
              onBeforeClick: function(e, t) {
                t.bdUrl = location.protocol + "//" + location.host + "/MoticGallery/Shares/Wiki?id=" + i.vm.node.id;
                var n = $("#pageContent").text();
                return t.bdDesc = 100 < n.length ? n.substring(0, 100) : n,
                    t.bdText = (i.vm.node.title || "") + "(MoticGallery-" + i.ucName + ")",
                    t
              }
            },
            share: [{
              bdSize: 24
            }]
          }
    }
    ]),
    angular.module("gallery.manageUploader", ["gallery.base"]).service("Uploader", ["$location", "$interval", "$log", function(e, t, n) {
      var i, o, r = ("https" == e.protocol() ? "wss://" : "ws://") + e.host() + ":" + e.port() + "/MoticGallery/Manage/Uploader/Status";
      if (!(o = window.WebSocket || window.MozWebSocket))
        return n.info("Not Support WebSocket!"),
            void alert("�����������֧��WebSocket!");
      try {
        o = new o(r)
      } catch (e) {
        n.error(e)
      }
      o.onmessage = function(e) {
        n.info(e.data)
      }
          ,
          o.onopen = function() {
            n.info("WebSocketConnected"),
            null == i && (i = t(function() {
              1 == o.readyState && o.send("Ping")
            }, 6e4))
          }
          ,
          o.onerror = function(e) {
            n.error("WebSocketError:" + e)
          }
          ,
          o.onclose = function(e) {
            n.info("WebSocketClosed")
          }
      ;
      function s() {
        o.close()
      }
      var a = "beforeunload";
      return window.addEventListener ? window.addEventListener(a, s, !1) : window.attachEvent ? window.attachEvent("on" + a, s) : window["on" + a] = s,
          o
    }
    ]).filter("mgSlideStatus", function() {
      return function(e) {
        if (null != e)
          return slideStatus[e]
      }
    }).filter("mgUploaderStatus", function() {
      return function(e) {
        if (null != e)
          return uploaderStatus[e]
      }
    }).controller("uploaderCtrl", ["$scope", "$interval", "Uploader", "mIP", function(i, e, t, o) {
      i.Uploaders = [],
          i.timeStampFilter = function(e) {
            return e.UpdateTime > i.TimeStamp
          }
          ,
          e(function() {
            i.TimeStamp = (new Date).getTime() - 1e4
          }, 2e3),
          i.LastUpdate = (new Date).getTime();
      var r = {};
      t.onmessage = function(t) {
        i.$apply(function() {
          var e = i.LastUpdate = (new Date).getTime();
          angular.forEach(JSON.parse(t.data), function(t) {
            var n;
            if (n = r[t.Id]) {
              null == n.status ? n.status = t.status : angular.forEach(t.status, function(e, t) {
                n.status[t] = e
              }),
              0 === n.Size && (n.Size = t.Size),
                  n.TaskCount = t.TaskCount,
                  n.ClientCount = t.ClientCount;
              try {
                n.status.Remaining = n.Size * (1 - n.status.Progress) / n.status.Speed
              } catch (e) {}
            } else
              o.query(t.IP).then(function(e) {
                t.IPData = e
              }, function() {}, function(e) {
                t.IPData = e
              }),
                  n = r[t.Id] = t,
                  i.Uploaders.push(t);
            n.UpdateTime = e
          })
        })
      }
    }
    ]),
    angular.module("gallery.about", ["gallery.base"]).service("About", ["$resource", function(e) {
      return e("/Users/:ucId/About", {
        ucId: "@ucId"
      }, {
        query: {
          isArray: !1
        }
      })
    }
    ]).service("Admin", ["$resource", function(e) {
      return e("/Users/:ucId/Admins/:id", {
        ucId: "@ucId",
        id: "@id"
      }, {
        save: {
          method: "PUT"
        }
      })
    }
    ]).service("Fan", ["$resource", function(e) {
      return e("/Users/:ucId/Fans", {
        ucId: "@ucId"
      })
    }
    ]).service("UC", ["$resource", function(e) {
      return e("/Users/:id", {
        id: "@id"
      }, {
        statistics: {
          method: "GET",
          url: "/Users/:id/Statistics",
          isArray: !1
        },
        update: {
          method: "PUT"
        }
      })
    }
    ]).controller("aboutCtrl", ["$scope", "About", "Admin", "Fan", "UC", "Follow", function(n, e, i, t, o, r) {
      var s = {
        ucId: n.vm.ucId
      };
      n.uc = e.query(s),
          n.admins = i.query(s),
          n.fans = t.query(s),
          n.updateUC = function() {
            new o({
              id: n.vm.ucId,
              name: n.vm.n.name,
              showInHome: n.vm.n.showInHome
            }).$update(function() {
              n.vm.ucName = n.uc.name = n.vm.n.name,
                  n.uc.showInHome = n.vm.n.showInHome
            })
          }
          ,
          n.delAdmin = function(e, t) {
            i.remove({
              ucId: n.uc.id,
              id: t.id
            }, function() {
              n.admins.splice(e, 1)
            })
          }
          ,
          n.addAdmin = function(t) {
            t.id && new i({
              ucId: n.uc.id,
              id: t.id
            }).$save(function(e) {
              n.admins.push(e),
                  t.search = void 0
            })
          }
          ,
          n.toggleFollow = function() {
            n.vm.isFollow ? new r({
              id: n.vm.ucId
            }).$remove(function() {
              n.uc.statistics.fanCount--,
                  n.vm.isFollow = !1;
              for (var e = 0; e < n.fans.length; e++)
                if (n.fans[e].id == n.vm.user.id)
                  return void n.fans.splice(e, 1)
            }) : new r({
              id: n.vm.ucId
            }).$save(function() {
              n.uc.statistics.fanCount++,
                  n.vm.isFollow = !0,
                  n.fans.push(n.vm.user)
            })
          }
    }
    ]),
    angular.module("gallery.myRelevantUC", ["gallery.base"]).service("ManageUC", ["$resource", function(e) {
      return e("/Users/ManageUCs")
    }
    ]).service("Follow", ["$resource", function(e) {
      return e("/Users/Follows/:ucId", {
        ucId: "@id"
      }, {
        save: {
          method: "PUT"
        }
      })
    }
    ]).controller("myRelevantUCCtrl", ["$scope", "Follow", "ManageUC", function(e, t, n) {
      e.follows = t.query(),
          e.manageUCs = n.query()
    }
    ]),
    angular.module("gallery.myFavorite", ["gallery.base", "gallery.mg-subjects"]).service("Share", ["$resource", function(e) {
      return e("/Users/ShareSubjects")
    }
    ]).controller("favoriteListCtrl", ["$scope", "$compile", "$timeout", "Favorite", "Share", function(d, e, t, n, i) {
      d.filter = {},
          d.filterFun = function(e, t) {
            e || 0 == e ? d.filter.ucId = e : delete d.filter.ucId,
                t ? d.filter.albId = t : delete d.filter.albId
          }
      ;
      var p = d.favorites = ("share" == d.page ? i : n).query(function() {
        d.loaded = !0;
        for (var e = d.catalogs = [], t = {}, n = 0; n < p.length; n++) {
          var i, o = p[n];
          (i = t[o.ucId]) || (i = t[o.ucId] = {
            ucId: o.ucId,
            ucName: o.ucName,
            subs: []
          },
              e.push(i)),
              i.subs.push({
                albId: o.albId,
                albName: o.albName
              })
        }
        e.sort(function(e, t) {
          return sortLocaleCompare(e.ucName, t.ucName)
        });
        for (var r = 0; r < e.length; r++) {
          var s = e[r].subs;
          s.sort(function(e, t) {
            return sortLocaleCompare(e.albName, t.albName)
          });
          var a = {};
          e[r].subs = [];
          for (var l = e[r].count = 0; l < s.length; l++) {
            var c, u = s[l];
            (c = a[u.albId]) || (c = a[u.albId] = {
              albId: u.albId,
              albName: u.albName,
              count: 0
            },
                e[r].subs.push(c)),
                c.count++,
                e[r].count++
          }
        }
      })
    }
    ]),
    angular.module("gallery.album", ["gallery.base", "gallery.mg-subjects"]).controller("editAlbumCtrl", ["$scope", "$sce", "Album", "mDSM", function(n, e, t, i) {
      n.updateAlbum = function() {
        var e = {
          ucId: n.vm.ucId,
          id: n.vm.albumId,
          name: n.vm.newAlbumName,
          hidden: n.vm.hideAlbum
        };
        n.vm.visible.batchVr && (e.visible = n.vm.visible.id,
            e.share = n.vm.visible.share),
            new t(e).$update(function() {
              n.vm.albumName = n.vm.newAlbumName,
                  n.vm.hiddenAlbum = n.vm.hideAlbum,
                  n.vm.visible.batchVr = !1,
              0 <= n.vm.visible.id && angular.forEach(n.subjects, function(e) {
                e.visible = n.vm.visible.id
              })
            })
      }
          ,
          n.deleteAlbum = function() {
            new t({
              ucId: n.vm.ucId,
              id: n.vm.albumId
            }).$remove(function() {
              var e = n.vm.uploadingSlides;
              for (var t in e)
                i.deleteSlideTask(e[t]);
              setTimeout(function() {
                location.href = n.vm.ContextPath + "/Users/" + n.vm.ucId
              }, 10)
            })
          }
    }
    ]).controller("subjectListCtrl", ["$scope", "Subject", "mDSM", "$window", function(t, e, n, i) {
      n.appId(t.vm.appId);
      var o = t.subjects = e.query({
        userCenterId: t.vm.ucId,
        albumId: t.vm.albumId,
        filter: t.vm.filter
      }, function() {
        t.loaded = !0,
        "function" == typeof t.vm.initWx && t.vm.initWx(),
            t.$watchCollection("subjects", function() {
              for (var e = t.slidesCount = 0; e < o.length; e++)
                null != o[e].slides && (t.slidesCount = t.slidesCount + o[e].slides.length)
            })
      });
      t.finishSlide = function(e) {
        var n = !0;
        return angular.forEach(e, function(e, t) {
          0 !== e.status && (n = !0)
        }),
            n
      }
          ,
          t.filterSortF = function() {
            768 < document.documentElement.clientWidth ? t.vm.filterSort = !0 : t.vm.filterSort = !1
          }
          ,
          t.filterSortF(),
          $(i).bind("resize", function() {
            t.filterSortF(),
                t.$apply()
          }).bind("click", function() {
            document.documentElement.clientWidth < 768 && (t.vm.filterSort = !1,
                t.vm.buttonDropdown = !1),
                t.$apply()
          })
    }
    ]),
    angular.module("gallery.subject", ["gallery.base"]).service("Slide", ["$http", function(t) {
      this.check = function(e) {
        return t.get("/UploadUtils/SlideExist/" + e)
      }
    }
    ]).directive("mgTagInput", [function() {
      function s(e, t) {
        e.ts = t.tagsinput("items"),
            e.$apply()
      }
      return {
        restrict: "A",
        replace: !1,
        scope: {
          ts: "=mgTagInput"
        },
        link: function(n, i, e) {
          i.tagsinput({
            maxTags: 10,
            tagClass: "btn  btn-grey-darken btn-flat btn-xs addUsersB"
          });
          var t, o, r = n.$watchCollection("ts", function() {
            n.ts instanceof Array && (r(),
                angular.forEach(n.ts, function(e, t) {
                  i.tagsinput("add", e)
                }))
          });
          i.tagsinput("input").typeahead({
            highlight: !0,
            hint: !0
          }, {
            name: "tags",
            displayKey: "value",
            source: (t = "/MoticGallery/Tags",
                (o = new Bloodhound({
                  datumTokenizer: Bloodhound.tokenizers.obj.whitespace("value"),
                  queryTokenizer: Bloodhound.tokenizers.whitespace,
                  remote: {
                    url: t + "?keyword=%QUERY",
                    wildcard: "%QUERY",
                    filter: function(e) {
                      return $.map(e, function(e) {
                        return {
                          value: e
                        }
                      })
                    }
                  }
                })).initialize(),
                o.ttAdapter())
          }).bind("typeahead:selected", $.proxy(function(e, t) {
            this.tagsinput("add", t.value),
                this.tagsinput("input").typeahead("close").typeahead("val", ""),
                t.value = "",
                s(n, i)
          }, i)).bind("keyup", function(e) {
            13 == e.keyCode && (i.val("").tagsinput("input").typeahead("close"),
                s(n, i))
          }).bind("blur", function() {
            "" != this.value && (i.tagsinput("add", this.value),
                i.tagsinput("input").typeahead("close").typeahead("val", ""),
                this.value = ""),
                s(n, i)
          })
        }
      }
    }
    ]).controller("subjectCtrl", ["$scope", "$document", "$q", "$log", "Subject", "mDSM", "Category", "mMessenger", function(a, e, l, c, t, u, n, d) {
      var p = a.vm;
      p.slides = [],
          p.attachment = {
            exists: [],
            news: {}
          },
          p.subjectId ? a.subject = t.get({
            userCenterId: p.ucId,
            albumId: p.albumId,
            id: p.subjectId
          }, function(e) {
            e.attachments ? angular.forEach(e.attachments, function(e, t) {
              p.attachment.exists.push(e)
            }) : e.attachments = [],
                e.slides ? angular.forEach(e.slides, function(e, t) {
                  p.slides.push(e)
                }) : e.slides = [],
                delete e.CreateTime
          }) : (a.subject = new t,
              a.subject.visible = 0,
              a.subject.attachments = [],
              a.subject.slides = [],
              a.subject.share = {},
              a.subject.sensitive = p.defaultSensitive),
          p.CreateTime = (new Date).toLocaleDateString();
      var i, o = n.init(a.vm.locale);
      a.categories = o.list,
          a.categoryMap = o.map,
          a.submit = function() {
            if (4 == a.subject.visible && (isNaN(a.subject.price) || a.subject.price <= 0))
              d.info(a.vm.msg.errorPrice);
            else if (a.subject.title) {
              a.submitting = !0;
              var e = a.subject.slides;
              e instanceof Array ? e.length = 0 : e = a.subject.slides = [];
              for (var t = !a.subject.id, n = [], i = {}, o = 0; o < p.slides.length; o++) {
                var r = p.slides[o];
                if (!(r.isDelete || r.isNew && !r.isPass)) {
                  if (!r.cId)
                    return a.submitting = !1,
                        void d.info(a.vm.msg.selectCategory);
                  var s = {
                    shadowId: r.shadowId,
                    id: r.id,
                    cId: r.cId,
                    desc: r.desc || "",
                    stain: r.stain || "",
                    specimen: r.specimen || "",
                    name: r.name || ""
                  };
                  e.push(s),
                  r.isNew && (n.push(r.SlidePath),
                      i[r.SlidePath] = {
                        s: r,
                        n: s
                      })
                }
              }
              u.checkSlide(n).then(function(e) {
                angular.forEach(e, function(e) {
                  var t = i[e.slidePath];
                  t && (t.s.SlideGuid = t.n.id = e.slideGuid)
                }),
                    function() {
                      var e;
                      e = t ? a.subject.$save({
                        userCenterId: a.vm.ucId,
                        albumId: a.vm.albumId
                      }) : a.subject.$update({
                        userCenterId: a.vm.ucId,
                        albumId: a.vm.albumId,
                        id: a.subject.id
                      });
                      e.then(function() {
                        c.info("SaveSubjectMetadataSuccess");
                        var e = []
                            , t = [];
                        for (var n in p.slides) {
                          var i = p.slides[n];
                          i.isNew ? t.push(i) : i.isDelete && e.push(u.deleteSlideTask(p.slides[n].id))
                        }
                        var o = u.addSlideTasks(t);
                        o.then(function() {
                          c.log("AddSlideTaskSuccess")
                        }, function(e) {
                          c.error("AddSlideTaskError:" + e),
                          "disconnected" == e && d.error({
                            id: "disconnected",
                            message: a.vm.msg.disconnected
                          })
                        }),
                            e.push(o);
                        var r = ["uc", p.ucId, "/", a.subject.id].join("")
                            , s = u.addAttachmentTasks(a.vm.attachment.news, r);
                        s.then(function() {
                          c.log("AddAttachmentTaskSuccess")
                        }, function(e) {
                          c.error("AddAttachmentTaskError:" + e)
                        }),
                            e.push(s),
                            l.all(e).then(function() {
                              c.log("successAll"),
                                  location.href = [p.ContextPath, "/Users/", p.ucId, "/Albums/", p.albumId, "?focusub=", a.subject.id].join("")
                            }, function() {
                              a.submitting = !1
                            })
                      }, function(e) {
                        a.submitting = !1,
                            c.error("SaveSubjectMetadataError:" + e)
                      })
                    }()
              })
            } else
              d.info(a.vm.msg.emptyTitle)
          }
          ,
          a.defaultCategoryId = 0,
          a.selectCategory = function(e) {
            i = e
          }
          ,
          a.changeCategory = function(e) {
            for (var t in i.cId = e,
                a.defaultCategoryId = e,
                p.slides)
              p.slides[t].isNew || 0 != p.slides[t].cId || (p.slides[t].cId = e);
            setTimeout(function() {
              angular.element("body").click()
            }, 10)
          }
    }
    ]).controller("visibleRangeCtrl", ["$scope", "$document", function(n, i) {
      n.isOpen = !1;
      var o = function() {
        n.isOpen = !1,
            i.unbind("click", o)
      };
      n.toggle = function() {
        n.isOpen || i.bind("click", o),
            n.isOpen = !0
      }
          ,
          n.select = function(e, t) {
            return n.subject.visible = e,
                n.text = t,
                n.isOpen = !1,
                i.unbind("click", o),
                !1
          }
    }
    ]).controller("subjectSlidesCtrl", ["$scope", "$log", "mDSM", "mSlide", "Slide", "mMessenger", function(n, e, t, i, o, r) {
      var s = {}
          , a = n.vm.slides;
      n.changeIndex = function(e, t) {
        var n = a[e];
        a[e] = a[e - t],
            a[e - t] = n
      }
          ,
          n.toggleDelete = function(e, t) {
            if (e.isDelete = t,
            e.isDelete && e.isNew) {
              var n = a.indexOf(e);
              a.splice(n, 1),
                  delete s[e.SlideGuid],
              !1 === e.isPass && 0
            }
          }
      ;
      function l(e) {
        var t = e.BarcodeMetadata;
        t && (!n.subject.title && t.Case && (n.subject.title = t.Case),
        t.SlideNum && (e.name = t.SlideNum),
        t.Stain && (e.stain = [t.Stain]),
        t.Specimen && (e.specimen = t.Specimen),
        n.subject.clinical || (n.subject.clinical = {}),
        n.subject.clinical.desc || (n.subject.clinical.desc = function(e) {
          var t = "";
          if (e)
            for (var n in e)
              if ("Case" != n && "SlideNum" != n && "Stain" != n && "Specimen" != n) {
                var i = e[n];
                t && (t += "\n"),
                    t += n + ":" + i
              }
          return t
        }(t)))
      }
      var c = n.$watch("vm.slide.dftStain", function(e) {
        for (var t in e && c(),
            a) {
          var n = a[t];
          n.isNew && n.isPass && !n.stain && (n.stain = e)
        }
      })
          , u = n.$watch("vm.slide.dftSpecimen", function(e) {
        for (var t in e && u(),
            a) {
          var n = a[t];
          n.isNew && n.isPass && !n.specimen && (n.specimen = e)
        }
      });
      t.addSlideCallback(function(e) {
        angular.forEach(e, function(e, t) {
          s[e.SlideGuid] || (e.isNew = !0,
              e.id = e.SlideGuid,
              e.name = e.SlideName,
              e.size = e.FileSize,
              e.cId = n.defaultCategoryId,
              s[e.SlideGuid] = !0,
              a.push(e),
              e.isPass = !0,
              l(e))
        }),
            n.$apply()
      }),
          n.sort = function() {
            i.sort(a)
          }
    }
    ]),
    angular.module("gallery.userCenter", ["gallery.base"]).controller("albumCtrl", ["$scope", function(n) {
      var i = n.pids = [];
      n.opt = {
        ucId: n.vm.ucId,
        module: "Catalogs",
        edit: vm.isAdmin,
        active: "",
        select: function(e, t) {
          t || (e ? (n.title = e.title,
              i.length = 0,
              i.push(e.id),
              function e(t, n) {
                for (var i = 0; i < n.length; i++)
                  t.push(n[i].id),
                      e(t, n[i].nodes)
              }(i, e.nodes)) : n.showAll())
        },
        load: function(e) {
          n.vm.isAdmin || (n.vm.hideCatalog = 0 == e.length)
        }
      },
          n.showAll = function() {
            n.title = "",
                i.length = 0
          }
          ,
          n.$on("album:add", function(e, t) {
            n.$broadcast("on:album:add", t)
          }),
          n.filterSortF = function() {
            768 < document.documentElement.clientWidth ? n.vm.filterSort = !0 : n.vm.filterSort = !1
          }
          ,
          n.filterSortF(),
          $($window).bind("resize", function() {
            n.filterSortF(),
                n.$apply()
          }).bind("click", function() {
            document.documentElement.clientWidth < 768 && (n.vm.filterSort = !1,
                n.vm.buttonDropdown = !1),
                n.$apply()
          })
    }
    ]).controller("albumListCtrl", ["$scope", "Album", function(n, e) {
      n.showIndex = 20;
      var i = $(document)
          , o = $(window);
      function r() {
        var e = i.scrollTop()
            , t = o.height();
        i.height() - e - t < 800 && (n.showIndex += 20,
            n.$apply(),
        n.showIndex >= n.Albums.length && o.unbind("scroll", r))
      }
      n.Albums = e.query({
        ucId: n.vm.ucId
      }),
          n.Albums.$promise.then(function() {
            setTimeout(function() {
              o.trigger("scrollstop").bind("scroll", r)
            }, 100)
          }),
          n.$on("on:album:add", function(e, t) {
            n.Albums.unshift(t)
          });
      var t = n.pids;
      n.filter = function(e) {
        return (0 == t.length || -1 != t.indexOf(e.parentId)) && (!n.vm.q || -1 != e.name.indexOf(n.vm.q))
      }
    }
    ]).controller("createAlbumCtrl", ["$scope", "Album", function(t, n) {
      t.createAlbum = function() {
        var e = new n({
          ucId: t.vm.ucId,
          name: t.name,
          hidden: t.hideAlbum,
          parentId: 0 < t.pids.length ? t.pids[0] : 0
        });
        e.$save(function() {
          t.name = "",
              t.$emit("album:add", e)
        })
      }
    }
    ]),
    angular.module("gallery.app", ["gallery.base"]).directive("stPaginationScroll", ["$timeout", function(l) {
      return {
        require: "stTable",
        link: function(e, t, n, i) {
          e.pagination = i.tableState().pagination;
          var o = null
              , r = 9999
              , s = t.parent().bind("scroll", function() {
            var e = s.scrollHeight - (s.clientHeight + s.scrollTop);
            e < 50 && e - r < 0 && (null !== o && l.cancel(o),
                o = l(function() {
                  i.pipe(),
                      o = null
                }, 400)),
                r = e
          })[0]
              , a = !1;
          e.$watch("pagination.start", function(e) {
            if (0 == e)
              return a = !1,
                  void (s.scrollTop = 0);
            a || l(function() {
              s && (s.scrollHeight > s.clientHeight ? a = !0 : i.pipe())
            })
          })
        }
      }
    }
    ]).service("App", ["$resource", function(e) {
      return e("/Apps/:id", {
        id: "@id",
        ucId: "@ucId"
      }, {
        query: {
          url: "/:ucId/Apps",
          isArray: !0
        },
        queryTask: {
          url: "/Apps/Tasks",
          isArray: !0
        },
        updateMenuStatus: {
          method: "PUT",
          url: "/Apps/:id/MenuStatus"
        },
        update: {
          method: "PUT"
        }
      })
    }
    ]).service("Task", ["$resource", function(e) {
      return e("/Users/Tasks/:id", {
        id: "@id"
      })
    }
    ]).controller("myAppCtrl", ["$scope", "App", "mMessenger", "AppTask", function(i, t, n, e) {
      var o = i.param = {
        app: [],
        sort: "createTime",
        reverse: !0,
        start: 1,
        size: 20
      };
      i.notTaskApp = ["D6C7AFC6-947E-E811-9AD9-005056B50E11", "E712329A-C94D-E811-B7D9-005056B50E11", "6389664A-CA5F-E711-AFA7-005056B50E11", "A3D39E3C-CA5F-E711-AFA7-005056B50E11", "DC8F8344-8FEB-46C3-87E4-3CC2B49B957F"],
          i.appNameKey = "name_" + i.vm.locale,
          i.myApps = t.query({}, function(e) {
            i.myApps.sort(function(e, t) {
              if (-1 < i.notTaskApp.indexOf(t.id) && -1 == i.notTaskApp.indexOf(e.id))
                return -1;
              if (-1 < i.notTaskApp.indexOf(e.id) && -1 == i.notTaskApp.indexOf(t.id))
                return 1;
              var n = i.appNameKey;
              return sortLocaleCompare(e[n], t[n])
            }),
                i.toggleAll(!0),
            0 < o.app.length && (i.hasTask = !0)
          }),
          i.$watch("param", function(e, t) {
            i.loading || (i.loadAll = !1,
                i.tasks.length = 0,
                i.load())
          }, !0),
          i.tasks = [],
          i.load = function() {
            i.loadAll || i.loading || 0 == o.app.length || (o.start = i.tasks.length + 1,
                t.queryTask(o, function(e) {
                  e.length < o.size && (i.loadAll = !0),
                      i.loading = !1;
                  for (var t = 0; t < e.length; t++)
                    i.tasks.push(e[t])
                }),
                i.loading = !0)
          }
          ,
          i.updateMenuStatus = function(e) {
            t.updateMenuStatus({
              id: e.id
            }, e.show ? "HIDE" : "SHOW", function() {
              n.info(i.vm.msg.saved),
                  e.show = !e.show
            }, function(e) {
              n.error(e.data.Message || e.statusText)
            })
          }
          ,
          i.sortLocaleCompare = function(e, t) {
            return sortLocaleCompare(e.value, t.value)
          }
          ,
          i.toggleApp = function(e) {
            var t = o.app.indexOf(e);
            -1 == t ? o.app.push(e) : o.app.splice(t, 1)
          }
          ,
          i.toggleAll = function(e) {
            if (o.app.length = 0,
                e)
              for (var t = 0; t < i.myApps.length; t++)
                -1 == i.notTaskApp.indexOf(i.myApps[t].id) && o.app.push(i.myApps[t].id)
          }
          ,
          i.changeOrder = function(e) {
            o.sort == e ? o.reverse = !o.reverse : (o.sort = e,
                o.reverse = "name" != e)
          }
      ;
      var r = initAppSig(i.vm.token);
      i.openSlide = function(e) {
        var t = i.vm.apiPath + "/Slides/" + e;
        window.open(r("GET", t))
      }
          ,
          i.openTask = function(e) {
            var t = i.vm.apiPath + "/Apps/" + e.appId + "/Tasks/" + e.id + "/Page";
            window.open(r("GET", t))
          }
          ,
          i.orderApp = function(e, t) {
            if (-1 < i.notTaskApp.indexOf(t.id))
              return 1;
            if (-1 < i.notTaskApp.indexOf(e.id))
              return -1;
            var n = "name_" + i.vm.locale;
            return sortLocaleCompare(e[n], t[n])
          }
    }
    ]).service("AppTask", ["$resource", "$http", function(e, i) {
      var t = e("/Apps/:appId/Tasks", {
        appId: "@appId"
      });
      return t.getStatistics = function(e, t) {
        var n = "/Users/" + e + "/AppStatistics?lastDays=" + t;
        return i.get(n)
      }
          ,
          t
    }
    ]).directive("mgChart", [function() {
      return {
        restrict: "A",
        replace: !1,
        scope: {
          op: "=",
          evt: "="
        },
        link: function(n, e, t) {
          var i = echarts.init(e[0]);
          $(window).resize(function() {
            i.resize()
          }),
              angular.forEach(n.evt, function(e, t) {
                i.on(t, e)
              }),
              n.$watch("op", function(e, t) {
                n.op && i.setOption(n.op)
              })
        }
      }
    }
    ]).controller("appTaskCtrl", ["$scope", "AppTask", function(s, n) {
      var a = s.vm.locale;
      s.loadStatistics = function(e) {
        s.lastDays = e,
            s.appIds = [],
            s.apps = [],
            n.getStatistics(s.vm.ucId, s.lastDays).success(function(e) {
              for (var t = [], n = [], i = 0; i < e.length; i++) {
                var o = e[i]
                    , r = o["name_" + a];
                t[i] = r,
                    n[i] = o.value,
                    s.apps.push({
                      id: o.appId,
                      func: o.func,
                      review: o.review
                    })
              }
              s.op = {
                title: {},
                tooltip: {},
                legend: {},
                xAxis: {
                  data: t,
                  axisLabel: {
                    align: "right",
                    rotate: 40
                  }
                },
                grid: {
                  bottom: 120
                },
                yAxis: {},
                series: [{
                  name: "",
                  type: "bar",
                  data: n
                }]
              }
            })
      }
          ,
          s.loadStatistics(30),
          s.evt = {
            click: function(e) {
              var t = s.apps[e.dataIndex];
              s.loadTask(t)
            }
          },
          s.loadTask = function(e, t) {
            s.currentApp = e,
            t && (s.lastDays = t),
                n.query({
                  appId: e.id,
                  func: e.func,
                  lastDays: s.lastDays
                }, function(e) {
                  s.tasks = e
                })
          }
    }
    ]).controller("appModuleCtrl", ["$scope", "App", "$timeout", function(t, e, n) {
      t.apps = e.query({
        ucId: t.vm.ucId
      }),
          t.edit = function(e) {
            t.sEdit = e,
                t.vm.editApp = null,
                n(function() {
                  t.vm.editApp = angular.copy(t.sEdit)
                })
          }
          ,
          t.updateApp = function() {
            e.update(t.vm.editApp, function() {
              angular.copy(t.vm.editApp, t.sEdit)
            })
          }
          ,
          t.sortLocaleCompare = function(e, t) {
            return sortLocaleCompare(e.value, t.value)
          }
    }
    ]),
    angular.module("gallery.imageSearch", ["gallery.base", "ngAnimate"]).service("Dictionary", ["$http", function(t) {
      this.query = function(e) {
        var n = {};
        return t.get("/Dictionaries", {
          params: e
        }).success(function(e) {
          angular.forEach(e, function(e, t) {
            n[t] = e
          })
        }),
            n
      }
    }
    ]).service("Search", ["$http", "$q", function(n, i) {
      this.query = function(e) {
        var i = {};
        return n.get("/Search.json", {
          params: e
        }).success(function(e, t, n) {
          i.slides = e,
              i.duration = n("PT")
        }),
            i
      }
          ,
          this.queryImg = function(e, t) {
            var i = {};
            return n.get("/Search/" + e + "/Result", {
              params: {
                c: t
              }
            }).success(function(e, t, n) {
              i.slides = e,
                  i.duration = n("PT")
            }),
                i
          }
          ,
          this.slideMetadata = function(e) {
            var t = i.defer();
            return n.get("/Search/Slides/" + e + "/Metadata").success(function(e) {
              t.resolve(e)
            }).error(function(e) {
              t.reject(e)
            }),
                t.promise
          }
          ,
          this.BrowseLog = function(e, t) {
            $.ajax({
              url: "/Search/" + e + "/Log",
              type: "PUT",
              async: !1
            })
          }
    }
    ]).controller("searchImgCtrl", ["$animate", "$scope", "$window", "$interval", "$timeout", "Search", "mModalBackdrop", "Dictionary", function(e, c, t, n, i, u, d, o) {
      var r;
      e.enabled(!0),
          c.slideInfo = o.query(c.vm.info),
          c.result = u.queryImg(c.vm.sid, c.vm.info.c),
          c.result.duration = 0,
          c.browse = [];
      function s(e) {
        i.cancel(r),
            r = i(function() {
              u.BrowseLog(c.vm.sid, c.browse.join(""))
            }, 1e5)
      }
      $(t).unload(function() {
        u.BrowseLog(c.vm.sid, c.browse.join(""))
      }),
          c.vm.logB = function(e) {
            0 == c.browse[e] && (c.browse[e] = 1),
                s()
          }
          ,
          c.vm.logD = function(e) {
            return c.browse[e] = 2,
                s(),
                !1
          }
      ;
      var a, l, p = c.$watch("result.slides", function() {
        if (a) {
          p(),
              n.cancel(l),
              c.loaded = !0;
          var e = c.result.slides;
          e = (e = e[e.length - 1]).Rank + e.Regions.length;
          for (var t = 0; t < e; t++)
            c.browse[t] = 0
        }
        a = !0
      });
      l = n(function() {
        c.result.duration += 1e3
      }, 1e3);
      function f(e, t, n, i, o) {
        for (var r = {
          width: t.x2 - t.x1 + 1,
          height: t.y2 - t.y1 + 1,
          tiles: []
        }, s = n.ScanObjective / t.o - 1, a = parseInt(t.y1 / n.TileHeight), l = parseInt(t.x1 / n.TileWidth), c = n.Sig, u = r.tiles, d = a; d * n.TileHeight < t.y2; d++)
          for (var p = l; p * n.TileWidth < t.x2; p++)
            u.push({
              left: p * n.TileWidth - t.x1,
              top: d * n.TileHeight - t.y1,
              url: ["http://", 2 == c.Type ? c.Bucket + "." : "", c.Host, "/", e, "/f_", s, "_", d, "_", p, ".jpg?", c.Signature].join("")
            });
        return r
      }
      c.showRegions = function(e, t) {
        t.preventDefault(),
            t.stopPropagation();
        var i = c.result.slides[e];
        if (!i.init) {
          i.init = !0,
              i.Id = i.Id.toLowerCase(),
              c.vm.logB(i.Rank);
          var n = window.outerWidth - 600
              , o = window.outerHeight;
          n < 512 && (n = 512),
          (o -= .2 * o + 60) < 512 && (o = 512);
          var r = i.Regions[0]
              , s = r.x2 - r.x1 + 1
              , a = r.y2 - r.y1 + 1;
          s < n && (n = s),
          a < o && (o = a),
              i.outSize = {
                x: n,
                y: o
              },
              i.scroll = {
                x: (s - n) / 2,
                y: (a - o) / 2
              };
          var l = i.frames = [];
          u.slideMetadata(i.Id).then(function(e) {
            for (var t = i.Regions, n = 0; n < t.length; n++)
              l[n] = f(i.Id, t[n], e);
            -1 !== e.UCId && (i.shadowId = e.shadowId,
                i.uc = {
                  id: e.UCId,
                  name: e.UCName,
                  albumId: e.AlbumId,
                  subjectId: e.SubjectId,
                  description: e.Description
                })
          }, function() {
            i.init = !1
          })
        }
        d.show({
          close: function() {
            c.result.isShown = !1
          }
        }),
            c.slideIndex = e,
            c.result.frames = i.frames,
            c.result.isShown = !0
      }
    }
    ]).controller("regionCtrl", ["$scope", "mModalBackdrop", "$timeout", function(t, n, i) {
      t.$watch("result.frames", function() {
        t.focus = 0;
        var n = t.$parent;
        n.result.slides && i(function() {
          var e = n.result.slides[n.slideIndex].scroll;
          document.getElementById("frames").scrollTop = e.y;
          var t = document.getElementById("frames");
          t.scrollLeft = e.x,
              t.scrollTop = e.y
        }, 300)
      }),
          t.show = function(e) {
            t.isSliderRight == t.focus >= e ? t.focus = e : (t.isSliderRight = !t.isSliderRight,
                i(function() {
                  t.focus = e
                }, 50))
          }
          ,
          t.showNext = function() {
            var e = t.$parent;
            t.vm.logB(e.result.slides[e.slideIndex].Rank + t.focus + 1 - 1),
                t.isSliderRight ? (t.isSliderRight = !1,
                    i(function() {
                      t.focus++
                    }, 50)) : t.focus++
          }
          ,
          t.showPrev = function() {
            var e = t.$parent;
            t.vm.logB(e.result.slides[e.slideIndex].Rank + t.focus - 1 - 1),
                t.isSliderRight ? t.focus-- : (t.isSliderRight = !0,
                    i(function() {
                      t.focus--
                    }, 50))
          }
          ,
          t.close = function(e) {
            e.target === e.currentTarget && (n.hide(),
                t.result.isShown = !1)
          }
      ;
      var o = {};
      t.isShow = function(e) {
        return !!o[e] || Math.abs(e - t.focus) < 2 && (o[e] = 1,
            !0)
      }
    }
    ]),
    angular.module("gallery.app.object", ["gallery.base"]).service("TaskObject", ["$resource", "$http", function(e, i) {
      var t = e("/Apps/:appId/Tasks/:taskId/Objects", {
        appId: "@appId",
        taskId: "@taskId"
      }, {
        queryObject: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Objects/Query",
          isArray: !0
        },
        listGroup: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Groups/Query",
          isArray: !0
        },
        listGroupObjects: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Groups/:groupId/Objects",
          isArray: !0
        },
        listSlides: {
          method: "GET",
          url: "/Apps/:appId/Tasks/:taskId/Slides",
          isArray: !0
        },
        listRoi: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Rois/Query",
          isArray: !0
        },
        lockRoi: {
          method: "PUT",
          url: "/Apps/:appId/Tasks/:taskId/Rois/:id/Lock"
        },
        deleteRoi: {
          method: "DELETE",
          url: "/Apps/:appId/Tasks/:taskId/Rois/:id"
        },
        updateObjectGroup: {
          method: "PUT",
          url: "/Apps/:appId/Tasks/:taskId/Groups/:groupId/Objects"
        },
        updateSlides: {
          method: "PUT",
          url: "/Apps/:appId/Tasks/:taskId/SelectSlides"
        },
        deleteObjects: {
          method: "DELETE",
          url: "/Apps/:appId/Tasks/:taskId/Objects"
        },
        updateTitle: {
          method: "PUT",
          url: "/Apps/:appId/Tasks/:taskId/Title"
        }
      });
      return t.deleteObjects = function(e, t, n) {
        i({
          method: "DELETE",
          url: "/Apps/" + e.appId + "/Tasks/" + e.taskId + "/Objects",
          data: t,
          headers: {
            "Content-Type": "application/json;charset=utf-8"
          }
        }).then(n)
      }
          ,
          t.restoreObjects = function(e, t, n) {
            i({
              method: "PUT",
              url: "/Apps/" + e.appId + "/Tasks/" + e.taskId + "/Objects",
              data: t,
              headers: {
                "Content-Type": "application/json;charset=utf-8"
              }
            }).then(n)
          }
          ,
          t
    }
    ]).controller("reviewCtrl", ["$scope", "$timeout", "$filter", "TaskObject", "ObjectLoader", "$http", function(u, d, a, p, f, e) {
      var m = u.SELECTS = {
        user: [],
        slide: [],
        roi: [],
        obj: []
      };
      u.selectChange = function(e, t, n) {
        var i = m[n];
        if ("BAT" === t) {
          if (i.length = 0,
              e)
            for (var o = u[n + "s"], r = 0; r < o.length; r++)
              i.push(o[r].id)
        } else if (e)
          i.push(t.id);
        else
          for (r = 0; r < i.length; r++)
            if (i[r] == t.id) {
              i.splice(r, 1);
              break
            }
        "user" == n ? u.changeUser() : "roi" == n || "obj" == n || u.changeSlide()
      }
          ,
          u.isChecked = function(e, t) {
            return -1 < m[t].indexOf(e)
          }
          ,
          u.selectGroup = function(e, t, n) {
            var i = m.obj;
            if (n)
              for (var o = 0; o < e.length; o++) {
                var r = e[o].scope.object.id;
                -1 == i.indexOf(r) && i.push(r)
              }
            else
              for (var s = e.objects, o = 0; o < s.length; o++) {
                var r = s[o]
                    , a = i.indexOf(r);
                t ? -1 == a && i.push(r) : -1 < a && i.splice(a, 1)
              }
          }
      ;
      var l = u.slideMap = {}
          , t = "mg_rv_objective";
      u.vm.objective = localStorage.getItem(t) || 20,
          f.init(u.vm.param),
          u.vm.loading = 1,
          u.slides = p.listSlides(u.vm.param, function(e) {
            if (u.vm.loading = !1,
            0 < e.length) {
              for (var t = 0, n = u.vm.ContextPath + "/API/Apps/" + u.vm.param.appId + "/Tasks/" + u.vm.param.taskId + "/Slides/{slideId}/Extend", i = 0; i < e.length; i++) {
                var o = e[i];
                l[o.id] = o;
                var r = [u.vm.ContextPath, "/API/Slides/", o.id, "?taskId=", u.vm.param.taskId].join("");
                o.url = a("mSig")(r, u.vm.token);
                var s = a("mSig")(n.replace("{slideId}", o.id), u.vm.token);
                o.url += "&extUrl=" + encodeURIComponent(s),
                u.vm.defSlide == o.id && (t = i)
              }
              m.slide.push(e[t].id),
                  u.changeSlide(),
                  setTimeout(function() {
                    u.$broadcast("m:scrollShow:show", "slide")
                  }, 10)
            }
          }),
          u.changeObjective = function(e) {
            localStorage.setItem(t, e),
                u.vm.objective = e
          }
          ,
          u.changeOrder = function(e) {
            u.vm.param.order = e
          }
      ;
      var s = u.roiMap = {};
      u.groups = [],
          u.changeSlide = function() {
            if (0 == m.slide.length)
              return m.roi.length = 0,
                  u.rois.length = 0,
                  void (u.vm.loading = !1);
            var o = {}
                , r = m.roi;
            if (u.rois)
              for (var e = 0; e < u.rois.length; e++) {
                var t = u.rois[e].id;
                -1 == r.indexOf(t) && (o[t] = 1)
              }
            u.vm.loading = 3,
                u.rois = p.listRoi(u.vm.param, m.slide.join(","), function(e) {
                  u.vm.loading = !1,
                      r.length = 0;
                  for (var t = u.roiLockedMap = {}, n = 0; n < e.length; n++) {
                    var i = e[n];
                    t[i.id] = i.locked,
                        (s[i.id] = i).slide = l[i.slideId.toLowerCase()],
                    o[i.id] || r.push(i.id)
                  }
                  0 < e.length && 0 == r.length && (r.push(e[0].id),
                      setTimeout(function() {}, 10))
                }),
                u.$broadcast("m:scrollShow:clear", "object")
          }
          ,
          u.activeGroup = function(e) {
            u.vm.activeGroup = null;
            for (var t = angular.element(e.target).attr("data-group"), n = u.groups, i = 0; i < n.length; i++) {
              var o = n[i];
              if (o.id == t)
                return void (u.vm.activeGroup = o);
              for (var r = 0; r < o.nodes.length; r++) {
                var s = o.nodes[r];
                if (s.id == t)
                  return void (u.vm.activeGroup = s)
              }
            }
          }
          ,
          u.op = {
            time: "",
            title: {
              text: "细胞比例图",
              x: "center"
            },
            tooltip: {
              trigger: "item",
              formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            series: [{
              type: "pie",
              radius: "55%",
              center: ["50%", "60%"],
              data: [],
              itemStyle: {
                emphasis: {
                  shadowBlur: 10,
                  shadowOffsetX: 0,
                  shadowColor: "rgba(0, 0, 0, 0.5)"
                }
              }
            }]
          },
          u.evt = {
            click: function(e) {
              location.href = "#group_" + e.data.id
            }
          },
          u.objCount = 0,
          u.updatePie = function(e) {
            u.op = {
              series: [{
                data: []
              }]
            };
            for (var t = 0, n = "desc_" + u.vm.locale, i = 0; i < e.length; i++) {
              var o = e[i];
              0 < o.objects.length && (u.op.series[0].data.push({
                id: o.id,
                name: o[n],
                value: o.objects.length
              }),
                  t += o.objects.length);
              for (var r = 0; r < o.nodes.length; r++) {
                var s = o.nodes[r];
                0 < s.objects.length && (u.op.series[0].data.push({
                  id: s.id,
                  name: s[n],
                  value: s.objects.length
                }),
                    t += s.objects.length)
              }
            }
            u.op.title = {
              subtext: "细胞总数：" + t
            },
                u.objCount = t
          }
          ,
          u.changeGroup = function(e) {
            u.vm.param.groupId = e.id
          }
          ,
          u.setSize = function(e) {
            u.objSty = e ? {
              width: e + "%"
            } : null,
                setTimeout(function() {
                  u.$broadcast("resize")
                }, 1)
          }
          ,
          angular.element(window).bind("resize", function() {
            u.$broadcast("resize")
          }),
          u.groupMap = {};
      var c = angular.copy(u.vm.param);
      u.cmdInfo = [],
          u.present = 0,
          u.changeObjectGroup = function(o) {
            c.groupId = o.id;
            for (var r = !u.vm.currentObjId, s = r ? u.SELECTS.obj : [u.vm.currentObjId], a = [], e = {
              type: "changeObjGroup",
              objs: []
            }, t = 0; t < s.length; t++) {
              var n = f.get(s[t])
                  , i = {};
              i.id = n.id,
                  i.oldGroupId = n.groupId,
                  i.newGroupId = o.id,
                  i.oldConfidence = n.confidence,
                  i.newConfidence = 200,
                  e.objs.push(i);
              var l = {};
              l.id = s[t],
                  l.confidence = 200,
                  a.push(l)
            }
            null != u.cmdInfo[u.present] && u.cmdInfo.splice(u.present, u.cmdInfo.length - u.present),
                u.cmdInfo.push(e),
                u.present = u.present + 1,
            0 != a.length && p.updateObjectGroup(c, a, function() {
              u.vm.currentObjId = null;
              var e = $.extend({
                groupId: o.id
              }, u.vm.param);
              p.listGroupObjects(e, m.roi.join(","), function(e) {
                o.objects = e,
                    u.updatePie(u.groups)
              });
              for (var t = 0; t < a.length; t++) {
                var n = f.get(a[t].id)
                    , i = u.groupMap[n.groupId];
                i.objects.splice(i.objects.indexOf(n.id), 1),
                    n.correct = !0,
                    n.confidence = 100,
                    n.groupId = o.id,
                    f.set(n)
              }
              r && (s.length = 0),
                  d(function() {
                    angular.element("body").click(),
                        u.$broadcast("m:scrollShow:show", "object")
                  }, 100)
            })
          }
          ,
          u.execute = function(e) {
            if ("deleteObj" == e.type) {
              var n = e.objs
                  , t = e.ids;
              p.deleteObjects(u.vm.param, t, function() {
                for (var e = 0; e < n.length; e++) {
                  var t = u.groupMap[n[e].groupId];
                  t.objects.splice(t.objects.indexOf(n[e].id), 1)
                }
              })
            } else {
              if ("changeObjGroup" != e.type)
                return;
              n = e.objs;
              for (var i = 0; i < n.length; i++) {
                var o = []
                    , r = {};
                r.id = n[i].id,
                    r.confidence = n[i].newConfidence,
                    o.push(r);
                var s = $.extend({
                  groupId: n[i].newGroupId
                }, u.vm.param);
                p.updateObjectGroup(s, o, function() {
                  var e = $.extend({
                    groupId: s.groupId
                  }, u.vm.param)
                      , t = u.groupMap[s.groupId];
                  d(function() {
                    p.listGroupObjects(e, m.roi.join(","), function(e) {
                      t.objects = e,
                          u.updatePie(u.groups)
                    })
                  }, 500)
                }());
                var a = f.get(n[i].id)
                    , l = u.groupMap[a.groupId];
                l.objects.splice(l.objects.indexOf(a.id), 1),
                    a.correct = !0,
                    a.confidence = n[i].newConfidence,
                    a.groupId = n[i].newGroupId,
                    f.set(a)
              }
            }
          }
          ,
          u.unExecute = function(e, t) {
            if ("deleteObj" == e.type) {
              var n = e.objs
                  , i = e.ids;
              p.restoreObjects(u.vm.param, i, function() {
                for (var e = 0; e < n.length; e++) {
                  u.groupMap[n[e].groupId].objects.splice(n[e].pos, 0, n[e].id)
                }
                u.updatePie(u.groups)
              })
            } else {
              if ("changeObjGroup" != e.type)
                return;
              n = e.objs;
              for (var o = 0; o < n.length; o++) {
                var r = []
                    , s = {};
                s.id = n[o].id,
                    s.confidence = n[o].oldConfidence,
                    r.push(s);
                var a = $.extend({
                  groupId: n[o].oldGroupId
                }, u.vm.param);
                p.updateObjectGroup(a, r, function() {
                  var e = $.extend({
                    groupId: a.groupId
                  }, u.vm.param)
                      , t = u.groupMap[a.groupId];
                  d(function() {
                    p.listGroupObjects(e, m.roi.join(","), function(e) {
                      t.objects = e,
                          u.updatePie(u.groups)
                    })
                  }, 500)
                }());
                var l = f.get(n[o].id)
                    , c = u.groupMap[l.groupId];
                c.objects.splice(c.objects.indexOf(l.id), 1),
                    l.correct = !0,
                    l.confidence = n[o].oldConfidence,
                    l.groupId = n[o].oldGroupId,
                    f.set(l)
              }
            }
          }
          ,
          u.redo = function() {
            u.cmdInfo[u.present] && (u.execute(u.cmdInfo[u.present]),
                u.present = u.present + 1,
                d(function() {
                  angular.element("body").click(),
                      u.$broadcast("m:scrollShow:show", "object")
                }, 500))
          }
          ,
          u.undo = function() {
            u.cmdInfo[u.present - 1] && (u.unExecute(u.cmdInfo[u.present - 1]),
                u.present = u.present - 1,
                d(function() {
                  angular.element("body").click(),
                      u.$broadcast("m:scrollShow:show", "object")
                }, 500))
          }
          ,
          u.deleteObject = function() {
            var o = u.SELECTS.obj
                , r = {
              type: "deleteObj",
              objs: []
            };
            r.ids = angular.copy(u.SELECTS.obj),
                p.deleteObjects(u.vm.param, o, function() {
                  for (var e = 0; e < o.length; e++) {
                    var t = {}
                        , n = f.get(o[e]);
                    t.id = n.id;
                    var i = u.groupMap[n.groupId];
                    t.groupId = n.groupId,
                        t.pos = i.objects.indexOf(n.id),
                        i.objects.splice(i.objects.indexOf(n.id), 1),
                        r.objs.push(t)
                  }
                  o.length = 0,
                      d(function() {
                        angular.element("body").click()
                      }, 100)
                }),
            null != u.cmdInfo[u.present] && u.cmdInfo.splice(u.present, u.cmdInfo.length - u.present),
                u.cmdInfo.push(r),
                u.present = u.present + 1
          }
          ,
          u.lockRoi = function(e, t) {
            var n = $.extend(u.vm.param, {
              id: e.id
            });
            p.lockRoi(n, t + "", function() {
              e.locked = t,
                  u.roiLockedMap[e.id] = t
            })
          }
          ,
          u.batLockRoi = function(e) {
            for (var t = u.SELECTS.roi, n = u.rois, i = 0; i < t.length; i++)
              for (var o = 0; o < n.length; o++)
                if (n[o].id == t[i]) {
                  u.lockRoi(n[o], e);
                  break
                }
          }
          ,
          u.batDelRoi = function() {
            for (var e = u.rois, t = 0, n = u.SELECTS.roi, i = 0; i < e.length; i++) {
              var o = e[i];
              -1 < n.indexOf(o.id) && !o.locked && t++
            }
            var r = "";
            if (0 != t) {
              if (r = 0 == u.objCount ? "确认删除选中的空Roi?" : "确认删除选中的" + t + "个Roi及其所属的" + u.objCount + "个标注？",
                  confirm(r))
                for (var s = 0; s < n.length; s++)
                  for (i = 0; i < e.length; i++)
                    if (e[i].id == n[s]) {
                      u.deleteRoi(e[i], !0);
                      break
                    }
            } else
              alert("锁定的Roi无法被删除！")
          }
          ,
          u.deleteRoi = function(n, e) {
            if (!0 === e || confirm("确认删除该Roi及其下标注？")) {
              var t = $.extend(u.vm.param, {
                id: n.id
              });
              p.deleteRoi(t, function() {
                u.rois.splice(u.rois.indexOf(n), 1);
                for (var e = u.SELECTS.roi, t = 0; t < e.length; t++)
                  if (n.id == e[t])
                    return void e.splice(t, 1)
              })
            }
          }
          ,
          u.updateTitle = function() {
            p.updateTitle(u.vm.param, u.vm.title, function() {
              u.editTitle = !1
            })
          }
    }
    ]).service("mgSlideImgLoader", ["$rootScope", "$q", function(l, i) {
      var a = this
          , c = {}
          , u = new LinkCache(200);
      this.loadTile = function(e, t, n, i, o) {
        var r = [e.id, "/f_", t, "_", n, "_", i, ".jpg"].join("")
            , s = u.get(r);
        s ? o && o(n, i, s) : c[r] ? o && c[r].push(o) : (a.load(e, [r, "f", t, n, i], function() {
          u.push(r, this);
          for (var e = c[r], t = 0; t < e.length; t++)
            e[t](n, i, this);
          c[r] = null
        }),
            c[r] = o ? [o] : [])
      }
          ,
          this.loadLabel = function(e, t) {
            var n = e.id + "/macro.jpg";
            n = e.id + "/label.jpg";
            var i = !0;
            a.load(e, n, t, function() {
              i && (i = !1,
                  n = e.id + "/label.jpg",
                  a.load(e, n, t))
            })
          }
          ,
          this.load = function(r, s, e, t) {
            var a = new Image;
            if (a.onload = e,
                a.onerror = t,
            !r.storageStatus.endsWith("Archive") || "string" == typeof s)
              return "string" != typeof s && (s = s[0]),
                  void (a.src = function(e, t) {
                    var n = e.sig;
                    0 < e.groupSize && (t = (t = t.split(".")[0].split("_"))[0] + "_" + t[1] + "/" + parseInt(parseInt(t[2]) / e.groupSize) + "-" + parseInt(parseInt(t[3]) / e.groupSize) + "/" + t[2] + "_" + t[3] + ".jpg");
                    if (0 == n.Type) {
                      var i = {
                        url: l.vm.apiPath + "/Tiles/" + t,
                        method: "GET"
                      };
                      return d(i),
                      i.url + "&storage=" + e.storageId
                    }
                    var o = [n.Endpoint];
                    4 == n.Type && o.push(n.TilePath);
                    o.push("/"),
                        o.push(t),
                        1 == n.Type ? o.push("?", n.Signature) : 4 == n.Type && o.push("?storage=", e.storageId);
                    return o.join("")
                  }(r, s));
            if (!r.index) {
              var n = i.defer();
              $.get(r.sig.files[s[1] + ".index.gz"], function(e) {
                var t = function(e, t) {
                  for (var n = parseInt(t.charAt(0)), i = 1, o = 0, r = Math.ceil(Math.log(Math.max(e.width, e.height)) / Math.log(2)) + 1, s = [e.tierCount], a = 0; a < e.tierCount; a++) {
                    s[a] = [r];
                    for (var l = 0; l < r; l++)
                      for (var c = Math.ceil(e.width * Math.pow(.5, l) / e.tileSize), u = Math.ceil(e.height * Math.pow(.5, l) / e.tileSize), d = s[a][l] = [u], p = 0; p < u; p++)
                        for (var f = d[p] = [c], m = f[0] = o, h = 0; h < c; ) {
                          var g = v(t.substring(i, i += n));
                          o += g,
                              f[++h] = o - m
                        }
                  }
                  return s
                }({
                  width: r.width,
                  height: r.height,
                  tierCount: r.tierCount || 1,
                  tileSize: r.tileSize
                }, e);
                n.resolve(t)
              }),
                  r.index = n.promise
            }
            r.index.then(function(e) {
              var t = e[0][s[2]][s[3]]
                  , n = s[4]
                  , i = (0 == n ? 0 : t[0]) + t[n]
                  , o = t[0] + t[n + 1];
              i != o && function(e, t, n, i) {
                var o = new XMLHttpRequest;
                o.responseType = "blob",
                    o.onload = n,
                    o.onerror = i,
                    o.open("GET", e),
                    o.setRequestHeader("Range", "bytes=" + t);
                window.setTimeout(function() {
                  o.abort(),
                      i()
                }, 4e3),
                    o.send()
              }(r.sig.files[s[1] + ".jpg"], i + "-" + o, function(e) {
                a.src = window.URL.createObjectURL(e.target.response)
              }, function() {})
            })
          }
      ;
      var o = 94;
      function v(e) {
        for (var t = 0, n = 0; n < e.length; n++) {
          var i = e.charCodeAt(n);
          93 <= i && i--,
          35 <= i && i--,
              t += i -= 32,
          n < e.length - 1 && (t *= o)
        }
        return t
      }
      var d = mAppSigInterceptors(l.vm.apiPath, l.vm.token).request
    }
    ]).service("ObjectLoader", ["TaskObject", function(t) {
      var n, o = {}, r = {};
      this.init = function(e) {
        n = $.extend({
          source: "user"
        }, e),
            t.query(n, function(e) {
              for (var t = 0; t < e.length; t++) {
                var n = e[t];
                n.correct = !0,
                    o[n.id] = n
              }
            })
      }
          ,
          this.set = function(e) {
            o[e.id] = e
          }
          ,
          this.get = function(e, t) {
            var n = o[e];
            if (n)
              return t && t(n),
                  n;
            r[e] = t,
                function(e) {
                  0 == i.length && setTimeout(s, 50);
                  i.push(e)
                }(e)
          }
      ;
      var i = [];
      function s() {
        t.queryObject(n, i.join(","), function(e) {
          for (var t = 0; t < e.length; t++) {
            var n = e[t];
            o[n.id] = n;
            var i = r[n.id];
            i && (i(n),
                r[n.id] = null)
          }
        }),
            i.length = 0
      }
    }
    ]).directive("mScrollShow", [function() {
      return {
        restrict: "A",
        replace: !1,
        controllerAs: "ctrl",
        scope: {
          id: "=mScrollShow",
          shown: "=?"
        },
        priority: 110,
        require: "?^^mScrollShow",
        link: function(i, o, e, t) {
          var n, r = e.mScrollShow, s = e.anchor;
          (i.shown || (i.shown = []),
              t) ? t.regist(i, o) : (o.bind("scroll", function() {
            clearTimeout(n),
                n = setTimeout(function() {
                  i.show(o)
                }, 300)
          }),
              n = setTimeout(function() {
                i.show(o)
              }, 100),
              i.$on("m:scrollShow:show", function(e, t) {
                if (r == t) {
                  if (s) {
                    var n = o.find(s);
                    0 < n.length && !a(o, n) && (o.scrollTop(n.offset().top - o.offset().top),
                        s = null)
                  }
                  i.show(o)
                }
              }));
          function a(e, t) {
            var n = e.offset();
            n.right = n.left + e.width(),
                n.bottom = n.top + e.height();
            var i = t.offset();
            return i.right = i.left + t.outerWidth(),
                i.bottom = i.top + t.outerHeight(),
                !(n.left > i.right || n.right < i.left || n.top > i.bottom || n.bottom < i.top)
          }
          i.$on("m:scrollShow:clear", function(e, t) {
            r == t && (i.children = [])
          }),
              i.show = function(n) {
                setTimeout(function() {
                  for (var e = i.shown.length = 0; e < i.children.length; e++) {
                    var t = i.children[e];
                    a(n, t.elem) ? (t.scope.show(n),
                        i.shown.push(t)) : t.scope.hide && t.scope.hide()
                  }
                  i.$apply()
                }, 1)
              }
              ,
              i.hide = function() {
                for (var e = 0; e < i.children.length; e++) {
                  var t = i.children[e].scope;
                  t.hide && t.hide()
                }
                i.$apply()
              }
        },
        controller: ["$scope", function(i) {
          i.children = [],
              this.regist = function(e, t) {
                var n = {
                  scope: e,
                  elem: t
                };
                return i.children.push(n),
                    function() {
                      i.children.splice(i.children.indexOf(n), 1)
                    }
              }
        }
        ]
      }
    }
    ]).directive("mScrollSpy", ["$parse", function(u) {
      return {
        restrict: "A",
        replace: !1,
        link: function(a, e, l, t) {
          var n = l.mScrollSpy;
          e.scrollspy({
            target: n,
            offset: window.innerHeight / 2
          });
          var c = angular.element(n).on("activate.bs.scrollspy", function(e, t, n, i) {
            var o = angular.element(e.target)
                , r = c.offset()
                , s = o.offset();
            r.height = c.outerHeight(),
                s.height = o.outerHeight(),
                r.bottom = r.top + r.height,
                s.bottom = s.top + s.height,
                s.top < r.top ? c.scrollTop(c.scrollTop() - (r.top - s.top)) : s.bottom > r.bottom && c.scrollTop(c.scrollTop() + (s.bottom - r.bottom)),
            l.callback && u(l.callback)(a, {
              $event: e
            })
          });
          a.$on("m:scrollSpy:refresh", function() {
            e.scrollspy("refresh")
          })
        },
        controller: ["$scope", function(e) {}
        ]
      }
    }
    ]).directive("mSelect", [function() {
      return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
          setTimeout(function() {
            t.select()
          }, 10)
        }
      }
    }
    ]).directive("mgScrollGroup", [function() {
      return {
        restrict: "A",
        replace: !1,
        require: "^^mScrollShow",
        priority: 100,
        link: function(m, h, e, t) {
          var n = e.mgScrollGroup
              , g = m[n];
          function i(e) {
            var t = h.find("div:first");
            if (0 != t.length) {
              var n = t.outerWidth(!0)
                  , i = t.outerHeight(!0)
                  , o = parseInt(h.width() / n)
                  , r = Math.ceil(g.objects.length / o) * i;
              if (0 < r && h.css("minHeight", r + "px"),
                  e) {
                var s, a = e.height(), l = e.offset().top, c = l + a, u = Math.ceil(a / i), d = u * i, p = h.offset().top, f = p + g.begin / o * i;
                if (g.len = o * u * 4,
                l - f < d) {
                  if (0 == g.begin)
                    return;
                  s = parseInt((l - 2 * a - p) / i)
                } else {
                  if (!(f + g.len / o * i - c < d))
                    return;
                  if (g.begin + g.len >= g.objects.length)
                    return;
                  s = parseInt((l - a - p) / i)
                }
                s < 0 && (s = 0),
                    g.begin = s * o,
                    g.padingTop = s * i,
                    h.css("paddingTop", g.padingTop + "px"),
                    m.$apply()
              } else
                g.len = o
            }
          }
          g.begin = 0,
              g.len = 1,
              m.hide = function() {
                i()
              }
              ,
              m.show = function(e) {
                i(e)
              }
              ,
          t && t.regist(m, h)
        },
        controller: ["$scope", function(e) {}
        ]
      }
    }
    ]).directive("mgSlideLabel", ["mgSlideImgLoader", function(s) {
      return {
        restrict: "A",
        replace: !1,
        require: "?^mScrollShow",
        scope: {
          slide: "=mgSlideLabel"
        },
        link: function(e, t, n, i) {
          i ? (e.show = r,
              i.regist(e, t)) : r();
          var o = !1;
          function r() {
            o || s.loadLabel(e.slide, function() {
              o = !0,
                  t.attr("src", this.src)
            })
          }
        }
      }
    }
    ]).directive("mgObject", ["ObjectLoader", function(s) {
      return {
        restrict: "A",
        replace: !1,
        require: "?^mScrollShow",
        scope: {
          id: "=?objId",
          task: "=",
          roiMap: "=",
          object: "=?mgObject",
          objective: "=?",
          outline: "=?",
          hd: "=?",
          select: "&",
          selects: "=",
          lockedMap: "=",
          drawOther: "&draw"
        },
        template: '<div id="{{id}}" ><a href="javascript:void(0)" target="_blank" ng-click="zoomTo($event,object)">                        <div class="thumb hotSlideImg borderBNone1" style="position:relative;">                        <label style="width:100%;display:flex;justify-content:space-between;padding:2px;margin:0;" ng-click="$event.stopPropagation();">                        <input type="checkbox" style="margin-top:2px;" ng-disabled="lockedMap[object.roiId]||object.joined" ng-model="selected" ng-change="select({checked:selected,obj:object,module:\'obj\'})">                        <span ng-if="module==\'review\'">{{object.confidence}}%</span>                        <span >{{object.area}}</span></label><span style="position:absolute;bottom:0;right:0;background:rgba(255,255,255,0.5);">{{scale*slide.objective| number:0}}X</span>                        <canvas ng-if="isShow&&object" mg-slide-viewer="slide" style="width:100%;"></canvas></div>                        </a>({{id}})<span ng-hide="lockedMap[object.roiId]" class="object-group" style="color: {{object.correct?\'red\':\'\'}};">{{object.groupId}}</span>                        <span ng-show="lockedMap[object.roiId]" style="color: {{object.correct?\'red\':\'\'}};">{{object.groupId}}</span></div>',
        link: function(r, e, t, n) {
          function i(e) {
            r.slide || (r.slide = r.roiMap[e.roiId].slide),
            r.id || (r.id = r.object.id),
                r.cp = {
                  x: e.cx,
                  y: e.cy
                }
          }
          if (r.object ? (r.module = "training",
              i(r.object)) : (r.module = "review",
              s.get(r.id, function(e) {
                e.isShow = r.isShow,
                    i(r.object = e)
              })),
              r.$watch("objective", function(e, t) {
                e != t && r.isShow && r.update(!0, !0)
              }),
              r.$watch("outline", function(e, t) {
                e != t && r.isShow && r.update()
              }),
              r.draw = function(e, t, n, i) {
                if (r.outline) {
                  var o = r.object;
                  e.strokeStyle = "red",
                      e.setLineDash([3, 2]),
                      e.globalCompositeOperation = "destination-over",
                      e.strokeRect(o.x, o.y, o.w, o.h)
                }
                r.drawOther && r.drawOther({
                  id: r.id,
                  ctx: e,
                  scale: t,
                  sx: n,
                  sy: i
                })
              }
              ,
              n) {
            r.show = function() {
              r.isShow = !0
            }
            ;
            var o = n.regist(r, e);
            r.$on("$destroy", function() {
              o()
            })
          } else
            r.isShow = !0;
          r.$watch(function() {
            return -1 < r.selects.indexOf(r.id)
          }, function(e) {
            r.selected = e
          })
        },
        controller: ["$scope", "$filter", function(i, e) {
          i.zoomTo = function(e, t) {
            if (localStorage.getItem("mg_sv_task_" + i.task) + 36e5 > (new Date).getTime()) {
              var n = "mg_slideviewer";
              return localStorage.setItem(n, JSON.stringify({
                type: "mv-panTo",
                x: t.x,
                y: t.y,
                w: t.w,
                h: t.h,
                s: i.scale,
                slideId: (i.slide.shadowId || i.slide.id).toLowerCase(),
                taskId: i.task
              })),
                  localStorage.removeItem(n),
                  e.preventDefault(),
                  !1
            }
            i.$emit("window.open", {
              taskId: i.task,
              slideId: i.slide.id,
              shadowId: i.slide.shadowId,
              x: t.x,
              y: t.y,
              w: t.w,
              h: t.h,
              s: i.scale
            })
          }
        }
        ]
      }
    }
    ]).controller("objectCtrl", ["$scope", "$filter", "TaskObject", function(r, e, i) {
      r.$on("window.open", function(e, t) {
        var n = screen.width
            , i = screen.height
            , o = r.slideMap[t.slideId].url;
        o += -1 == o.indexOf("?") ? "?" : "&",
            o += ["x=", t.x, "&y=", t.y, "&w=", t.w, "&h=", t.h, "&s=", t.s, "&taskId=", t.taskId, "&from=cloud"].join(""),
            window.open(o, "", "fullscreen=no,scrollbars=no,toolbar=no, menubar=no,status=no,location=no,resizable=no, top=0, left=" + n + ", width=" + n + ",height=" + i)
      });
      $.extend({}, r.vm.param);
      function t(e, t) {
        var n = r.SELECTS;
        if ((r.groups.length = 0) == n.roi.length)
          return 5 <= r.loading && (r.vm.loading = !1),
              void r.updatePie([]);
        r.vm.loading = 5,
            i.listGroup(r.vm.param, n.roi.join(","), function(e) {
              5 <= r.vm.loading && (r.vm.loading = !1);
              for (var t = 0; t < e.length; t++)
                r.groups.push(e[t]);
              n.obj.length = 0,
                  r.updatePie(e),
                  r.$broadcast("m:scrollShow:show", "object")
            }),
            r.$broadcast("m:scrollShow:clear", "object")
      }
      r.$watch("vm.param.order", t),
          r.$watchCollection("SELECTS.roi", t)
    }
    ]).directive("mgConf", [function() {
      return {
        restrict: "A",
        replace: !1,
        require: "ngModel",
        link: function(e, t, n, i) {
          var o = "mg_rv_" + n.mgConf
              , r = localStorage.getItem(o);
          try {
            r = JSON.parse(r)
          } catch (e) {}
          i.$setViewValue(r),
              i.$render(),
              i.$viewChangeListeners.push(function() {
                localStorage.setItem(o, t.prop("checked"))
              })
        }
      }
    }
    ]).directive("mgRoiViewer", [function() {
      return {
        restrict: "A",
        replace: !1,
        require: "?^mScrollShow",
        scope: {
          roi: "=mgRoiViewer",
          hd: "=?"
        },
        template: '<canvas style="height:100%;width:100%;" ng-if="isShow" ng-mousemove="mousemove($event)" mg-slide-viewer="slide"></canvas>            <div style="padding-left:3px;padding-right:3px;border:1px solid #000;position:absolute;max-width:200px;            background-color:#FFFFFF;color:#000000;z-index:999;visibility:hidden">{{name}}<br>{{description}}</div>',
        link: function(g, v, e, t) {
          var l = g.roi;
          g.slide = l.slide,
              g.rect = l;
          var b, w, y, S = [];
          function I(e, t) {
            var n, i = t.length - 1, o = 0;
            for (n = 0; n < t.length; n++)
              (t[n].y < e.y && t[i].y >= e.y || t[i].y < e.y && t[n].y >= e.y) && (t[n].x <= e.x || t[i].x <= e.x) && t[n].x + (e.y - t[n].y) / (t[i].y - t[n].y) * (t[i].x - t[n].x) < e.x && o++,
                  i = n;
            return 1 & o
          }
          function c(e, t) {
            e.beginPath();
            for (var n = 0; n < t.length; n++) {
              var i = t[n];
              0 == n ? e.moveTo(i.x, i.y) : e.lineTo(i.x, i.y)
            }
            e.closePath(),
                e.stroke()
          }
          if (g.mousemove = function(e) {
            var t = v[0].children[0]
                , n = v[0].children[1]
                , i = t.getBoundingClientRect()
                , o = t.clientWidth || t.offsetWidth
                , r = t.clientHeight || t.offsetWidth
                , s = e.clientX - i.left * (t.width / i.width)
                , a = e.clientY - i.top * (t.height / i.height)
                , l = {};
            l.x = s / y + b,
                l.y = a / y + w;
            for (var c = 0, u = 0; u < S.length; u++) {
              var d = S[u];
              if (I(l, d.points)) {
                g.name = "名称: " + d.name,
                    g.description = "描述: " + d.description;
                var p = n.clientWidth || n.offsetWidth
                    , f = n.clientHeight || n.offsetHeight
                    , m = 25 + s
                    , h = 25 + a;
                o < s + p && (m = s - p + 5),
                r < a + f && (h = a - f - 5),
                    n.style.top = h + "px",
                    n.style.left = m + "px",
                    n.style.visibility = "visible",
                    c = 1
              }
            }
            0 == c && (n.style.visibility = "hidden"),
            (o - 15 <= s || s <= 15 || r - 15 <= a || a <= 15) && (n.style.visibility = "hidden")
          }
              ,
              g.draw = function(e, t, n, i) {
                b = n,
                    w = i,
                    y = t,
                    e.strokeStyle = "#0000ff",
                    e.setLineDash([10 / t, 8 / t]),
                    e.lineWidth = 2 / t,
                    e.globalCompositeOperation = "destination-over";
                var o, r = g.rect;
                e.strokeRect(l.x, r.y, r.w, r.h);
                for (var s = 0; s < S.length; s++) {
                  var a = S[s];
                  e.strokeStyle = (o = a.color,
                      0,
                  "rgb(" + (o >> 16 & 255) + "," + (o >> 8 & 255) + "," + (255 & o) + ")"),
                      e.lineWidth = a.width / t,
                      e.setLineDash([]),
                      a.type,
                  a.points && c(e, a.points)
                }
              }
              ,
              g.$on("updateAnnotations", function(e, t) {
                for (var n = S.length = 0; n < t.length; n++)
                  t[n].roiId == l.id && S.push(t[n].annotation);
                g.isShow && g.update()
              }),
              t) {
            var n = t.regist(g, v);
            g.show = function() {
              g.isShow = !0
            }
                ,
                g.$on("$destroy", function() {
                  n()
                })
          }
        }
      }
    }
    ]).directive("mgSlideViewer", ["mgSlideImgLoader", "$timeout", "$document", "mgRVProfiler", function(j, C, T, A) {
      return {
        restrict: "A",
        replace: !1,
        link: function(h, o, e) {
          var t, g = o[0], v = g.getContext("2d"), b = (t = v.backingStorePixelRatio || v.webkitBackingStorePixelRatio || v.mozBackingStorePixelRatio || v.msBackingStorePixelRatio || v.oBackingStorePixelRatio || v.backingStorePixelRatio || 1,
              window.devicePixelRatio,
              1);
          h.hd && (b = 2),
              h.$watch("hd", function(e, t) {
                e != t && (b = e ? 2 : 1,
                    m(!0, !0))
              });
          var w = h.slide
              , y = w.tileSize
              , S = h.padding || 4;
          h.$watch("scale", function(e, t) {
            e != t && r(!0)
          }),
              h.$watch("hd", function(e, t) {
                e != t && r(!0)
              });
          var I = 0
              , $ = 1
              , k = {
            x: 0,
            y: 0
          };
          function r(e, t) {
            t && function() {
              if (h.objective)
                h.scale = h.objective / w.objective;
              else if (h.rect) {
                var e = h.rect;
                h.cp = {
                  x: e.x + e.w / 2,
                  y: e.y + e.h / 2
                },
                    g.width / g.height > e.w / e.h ? h.scale = (g.height / b - S) / e.h : h.scale = (g.width / b - S) / e.w
              } else
                h.scale || (g.width / g.height > w.width / w.height ? h.scale = g.width / b / w.width : h.scale = g.height / b / w.height),
                h.cp || (h.cp = {
                  x: w.width / 2,
                  y: w.height / 2
                });
              h.max = 2 * h.scale,
                  h.min = .5 * h.scale
            }(),
            e && function() {
              (I = Math.floor(Math.log(h.scale * b) / Math.log(.5))) < 0 && (I = 0);
              $ = Math.pow(.5, I),
                  C(function() {})
            }();
            var n = (h.$parent.scale = h.scale) * b;
            v.restore(),
                v.save(),
                v.clearRect(0, 0, g.width, g.height),
                v.lineWidth = 1 / h.scale,
                v.scale(n, n);
            var i = g.width / n / 2
                , o = g.height / n / 2
                , r = h.cp.x - k.x / n
                , s = h.cp.y - k.y / n
                , a = r - i
                , l = s - o
                , c = r + i
                , u = s + o;
            v.translate(-a, -l),
            h.draw && h.draw(v, h.scale, a, l);
            for (var d = y / $, p = 0, f = Math.floor(a / d); f * d < c; f++)
              if (!(f < 0))
                for (var m = Math.floor(l / d); m * d < u; m++)
                  m < 0 || (j.loadTile(h.slide, I, m, f, x),
                      p++);
            A.addTask(p)
          }
          function x(e, t, n) {
            var i = y / $;
            v.drawImage(n, t * i, e * i, n.width / $, n.height / $)
          }
          m(),
              h.$parent.update = r;
          var n = {
            x: 0,
            y: 0
          };
          function i(e) {
            k.x += (e.clientX - n.x) * b,
                k.y += (e.clientY - n.y) * b,
                n.x = e.clientX,
                n.y = e.clientY,
                r()
          }
          o.bind("mousedown", function(e) {
            n.x = e.clientX,
                n.y = e.clientY,
                T.bind("mousemove", i).one("mouseup", function(e) {
                  T.unbind("mousemove", i)
                })
          });
          var s, a, l = 0;
          function c(e) {
            var t = window.event || event
                , n = Math.max(-1, Math.min(1, t.wheelDelta || -t.detail));
            !1 === a(n, t) && e.preventDefault()
          }
          o.bind("touchstart", function(e) {
            var t = e.originalEvent;
            1 == t.touches.length ? (n.x = t.touches[0].clientX,
                n.y = t.touches[0].clientY) : 2 == t.touches.length && (l = f(t.touches[0], t.touches[1]))
          }).bind("touchmove", function(e) {
            var t = e.originalEvent;
            if (1 == t.touches.length)
              i(t.touches[0]);
            else if (2 == t.touches.length) {
              var n = f(t.touches[0], t.touches[1]);
              h.scale *= n / l,
                  l = n,
                  h.scale > h.max ? h.scale = h.max : h.scale < h.min && (h.scale = h.min)
            }
            t.preventDefault(),
                r(!0)
          }),
              h.$on("resize", m),
              h.$on("$destroy", function() {
                o.unbind()
              }),
              a = function(e, t) {
                if (t.ctrlKey) {
                  return e < 0 ? h.scale *= .8 : h.scale /= .8,
                      h.scale > h.max ? h.scale = h.max : h.scale < h.min && (h.scale = h.min),
                      r(!0),
                      !1
                }
              }
              ,
              (s = g).addEventListener ? (s.addEventListener("mousewheel", c, !1),
                  s.addEventListener("DOMMouseScroll", c, !1)) : s.attachEvent("onmousewheel", c);
          var u, d = Math.sqrt, p = Math.pow;
          function f(e, t) {
            return d(p(e.clientX - t.clientX, 2) + p(e.clientY - t.clientY, 2))
          }
          function m(e, t) {
            var n = o.parent().width() - 1
                , i = o.parent().outerHeight() - 1;
            !t && u == n || (u = n,
                o.css({
                  width: n,
                  height: i
                }),
                g.width = n * b,
                g.height = i * b,
                r(!0, !0))
          }
        }
      }
    }
    ]).service("mgRVProfiler", [function() {
      var t, n = [0, 0, 0, 0];
      this.addTask = function(e) {
        n[e - 1]++,
            clearTimeout(t),
            t = setTimeout(function() {
              console.log(JSON.stringify(n)),
                  n = [0, 0, 0, 0]
            }, 5e3)
      }
    }
    ]).service("mgStorageEvt", function() {
      var o = "mg_slideviewer"
          , r = (new Date).getTime()
          , s = {};
      $(window).bind("storage", function(e) {
        if ((e = e.originalEvent).key == o && e.newValue) {
          var t = JSON.parse(e.newValue);
          if (t.pageId != r || "mpcc-ui" == t.type) {
            var n = s[t.type];
            if (n)
              for (var i = 0; i < n.length; i++)
                n[i](t)
          }
        }
      }),
          this.bind = function(e, t) {
            var n = s[e];
            (n = n || (s[e] = [])).push(t)
          }
          ,
          this.broadcast = function(e) {
            e.pageId = r,
                localStorage.setItem(o, JSON.stringify(e)),
                localStorage.removeItem(o)
          }
    }).directive("mgMpcc", ["mgStorageEvt", function(o) {
      return {
        restrict: "A",
        replace: !1,
        link: function(e, t, n) {
          var i = e.vm.case;
          t.mpcc({
            change: function(e) {
              o.broadcast({
                type: "mpcc-report",
                items: e,
                case: i
              })
            }
          }),
              o.bind("mpcc-ui", function(e) {
                i == e.case && t.mpcc("init", e.items)
              }),
              o.bind("mpcc-report", function(e) {
                i == e.case && t.mpcc("update", e.items)
              }),
              o.bind("mpcc-enable", function(e) {
                i == e.case && t.mpcc("disabled", e.enable)
              }),
              o.broadcast({
                type: "mpcc-init",
                case: i
              })
        }
      }
    }
    ]).filter("firstBy", [function() {
      return function(e, t) {
        if (e) {
          for (var n, i = 0; i < e.length; i++) {
            var o = e[i];
            n !== o[t] && (o.first_by_key = !0,
                n = o[t])
          }
          return e
        }
      }
    }
    ]).service("TaskAnnotation", ["$resource", function(e) {
      return e("/Apps/:appId/Tasks/:taskId/Annotations", {
        appId: "@appId",
        taskId: "@taskId"
      }, {
        listAnnotation: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Annotations/Query",
          isArray: !0
        }
      })
    }
    ]).controller("annotationCtrl", ["$scope", "TaskAnnotation", function(n, i) {
      var o = $.extend({}, n.vm.param);
      n.$watchCollection("SELECTS.roi", function(e, t) {
        0 < e.length ? (n.vm.loading = 5,
            i.listAnnotation(o, n.SELECTS.roi.join(","), function(e) {
              5 <= n.vm.loading && (n.vm.loading = !1),
                  n.$broadcast("updateAnnotations", e),
                  n.$broadcast("m:scrollShow:show", "annotation")
            })) : 5 <= n.vm.loading && (n.vm.loading = !1)
      })
    }
    ]).directive("mgRoiSlideViewer", ["$filter", "$q", "FrameMsg", function(p, f, m) {
      return {
        restrict: "A",
        replace: !1,
        scope: {
          roi: "=mgRoiSlideViewer"
        },
        template: '<iframe style="width:100%;height:100%;" ng-src="{{url}}"></iframe>',
        link: function(e, t, n, i) {
          var o = ""
              , r = ["appId", "se", "addit", "userId", "random", "sig"];
          new URLSearchParams(window.location.search).forEach(function(e, t, n) {
            -1 == r.indexOf(t) && (o += "&" + t + "=" + encodeURIComponent(e))
          });
          var s = e.roi
              , a = "{cloud}/API/Slides/{slideId}?v=2&style=custom&x={x}&y={y}&w={w}&h={h}";
          a = a.replace("{cloud}", e.$root.vm.ContextPath).replace("{slideId}", s.slideId).replace("{x}", s.x).replace("{y}", s.y).replace("{w}", s.w).replace("{h}", s.h).replace("{taskId}", e.$root.vm.param.taskId),
              a = p("mSig")(a, e.$root.vm.token),
              e.url = a + o;
          var l = f.defer();
          e.$on("updateAnnotations", function(e, t) {
            for (var n = [], i = 0; i < t.length; i++) {
              var o = t[i];
              if (o.roiId == s.id) {
                var r = o.annotation;
                r.type.endsWith("Marquee"),
                    r.status = -4,
                    r.visible = !0,
                r.externalData || (r.externalData = {}),
                    r.externalData.id = o.id,
                    r.externalData.roiId = s.id,
                    n.push(r)
              }
            }
            l.resolve(n)
          });
          var c = f.defer();
          m.on("mv-init", function(e) {
            e.slideId.toUpperCase() == s.slideId && (c.resolve(),
                d({
                  type: "mv-plugins",
                  plugins: [{
                    name: "capture",
                    enable: !0,
                    hotKey: 119,
                    location: "bl"
                  }, {
                    name: "split",
                    enable: !1
                  }]
                }))
          }),
              f.all([l.promise, c.promise]).then(function(e) {
                d({
                  type: "mv-annotation",
                  action: "add",
                  annotations: e[0]
                })
              });
          var u = t.find("iframe")[0];
          function d(e) {
            m.post(u, e)
          }
        }
      }
    }
    ]).service("FrameMsg", [function() {
      var o = {};
      $(window).on("message", function(e) {
        var t = e.originalEvent.data;
        try {
          t = JSON.parse(t)
        } catch (e) {}
        var n = o[t.type];
        if (n)
          for (var i = 0; i < n.length; i++)
            try {
              n[i](t)
            } catch (e) {
              console.error("[FrameEvent]" + e.message)
            }
      }),
          this.on = function(e, t) {
            o[e] ? o[e].push(t) : o[e] = [t]
          }
          ,
          this.post = function(e, t) {
            e.contentWindow.postMessage(JSON.stringify(t), "*")
          }
    }
    ]).service("TaskSearch", ["$resource", function(e) {
      return e("/Apps/:appId/Tasks/:taskId/Search", {
        appId: "@appId",
        taskId: "@taskId",
        slideId: "@slideId"
      }, {
        result: {
          isArray: !1
        },
        getSlideMetadata: {
          method: "GET",
          url: "/Slides/:slideId/Metadata"
        },
        listAnnotation: {
          method: "POST",
          url: "/Apps/:appId/Tasks/:taskId/Annotations/Query",
          isArray: !0
        }
      })
    }
    ]).controller("searchCtrl", ["$scope", "$timeout", "$filter", "$sce", "mModalBackdrop", "TaskSearch", function(r, i, o, t, s, e) {
      function a(e) {
        var t = r.vm.ContextPath + "/API/Apps/" + r.vm.param.appId + "/Tasks/" + r.vm.param.taskId + "/Slides/{slideId}/Extend"
            , n = [r.vm.ContextPath, "/API/Slides/", e].join("");
        n = o("mSig")(n, r.vm.token);
        var i = o("mSig")(t.replace("{slideId}", e), r.vm.token);
        return n += "&extUrl=" + encodeURIComponent(i)
      }
      r.result = {
        slides: []
      },
          r.catalogues = {},
          e.result(r.vm.param, function(e) {
            angular.forEach(e.regions, function(e, t) {
              var n = {
                id: t.toLowerCase(),
                regions: [],
                library: e.library
              };
              r.catalogues[e.library] ? r.catalogues[e.library]++ : r.catalogues[e.library] = 1;
              for (var i = 0; i < e.positions.length; i++) {
                var o = e.positions[0];
                n.regions.push(e.positions[i]),
                    n.url = a(t) + "&taskId=" + r.vm.param.taskId + "&x=" + o.left + "&y=" + o.top + "&w=" + (o.right - o.left) + "&h=" + (o.bottom - o.top)
              }
              r.result.slides.push(n)
            })
          }),
          r.getSlideUrl = function() {
            var e = r.frameUrl || "";
            return t.trustAsResourceUrl(e)
          }
          ,
          r.showRegions = function(e, t) {
            t.preventDefault(),
                t.stopPropagation();
            var n = r.result.slides[e];
            r.frameUrl = n.url,
                r.result.focus = 0,
                s.show({
                  close: function() {
                    r.result.isShown = !1,
                        r.frameUrl = "about:blank"
                  }
                }),
                r.slideIndex = e,
                r.result.isShown = !0,
                i(function() {
                  r.$broadcast("resize")
                })
          }
          ,
          r.slides.$promise.then(function(e) {
            r.rois.$promise.then(function(e) {
              var t = r.slides[0]
                  , n = e[0];
              r.result.tmplSlide = {
                id: t.id,
                storageId: t.storageId,
                storageStatus: t.storageStatus,
                groupSize: t.groupSize || 0,
                sig: t.sig,
                tileSize: t.tileSize,
                height: t.height,
                width: t.width,
                objective: t.objective,
                region: {
                  top: n.y,
                  bottom: n.y + n.h,
                  left: n.x,
                  right: n.x + n.w
                }
              }
            })
          })
    }
    ]).controller("searchRegionCtrl", ["$scope", "mModalBackdrop", "$timeout", function(i, t, n) {
      function e() {
        n(function() {
          var e = "mg_slideviewer"
              , t = i.result.slides[i.slideIndex]
              , n = t.regions[i.result.focus];
          localStorage.setItem(e, JSON.stringify({
            type: "mv-panTo",
            x: n.left,
            y: n.top,
            w: n.right - n.left,
            h: n.bottom - n.top,
            slideId: t.id.toLowerCase(),
            taskId: i.vm.param.taskId
          })),
              localStorage.removeItem(e)
        }, 55)
      }
      i.result.focus = 0,
          i.show = function(e) {
            i.isSliderRight == i.result.focus >= e ? i.focus = e : (i.isSliderRight = !i.isSliderRight,
                n(function() {
                  i.focus = e
                }, 50))
          }
          ,
          i.showNext = function() {
            i.$parent;
            i.isSliderRight ? (i.isSliderRight = !1,
                n(function() {
                  i.result.focus++
                }, 50)) : i.result.focus++,
                e()
          }
          ,
          i.showPrev = function() {
            i.$parent;
            i.isSliderRight ? i.result.focus-- : (i.isSliderRight = !0,
                n(function() {
                  i.result.focus--
                }, 50)),
                e()
          }
          ,
          i.close = function(e) {
            e.target === e.currentTarget && (t.hide(),
                i.result.isShown = !1)
          }
      ;
      var o = {};
      i.isShow = function(e) {
        return !!o[e] || Math.abs(e - i.result.focus) < 2 && (o[e] = 1,
            !0)
      }
    }
    ]).directive("mgRegionViewer", [function() {
      return {
        restrict: "A",
        replace: !1,
        require: "?^mScrollShow",
        scope: {
          region: "=mgRegionViewer",
          slide: "=",
          hd: "=?"
        },
        template: '<canvas style="height:100%;width:100%;position:absolute;top:0;left:0;" mg-slide-viewer="slide"></canvas>',
        link: {
          pre: function(r, e, t, n) {
            var i = r.region;
            r.padding = e.width() / 2,
                r.rect = {
                  x: i.left,
                  y: i.top,
                  w: i.right - i.left,
                  h: i.bottom - i.top
                },
                r.draw = function(e, t, n, i) {
                  e.strokeStyle = "#0000ff",
                      e.setLineDash([10 / t, 8 / t]),
                      e.lineWidth = 2 / t,
                      e.globalCompositeOperation = "destination-over";
                  var o = r.rect;
                  e.strokeRect(o.x, o.y, o.w, o.h)
                }
          }
        }
      }
    }
    ]),
    function(l) {
      var n = {
        locale: "zh_CN",
        change: function(e) {}
      };
      function s(e, t) {
        this.inited = !1,
            this.items = [],
            this.report = {},
            this.elem = l(e),
            this.options = l.extend({}, n, t),
            this.init()
      }
      l("head").append('<style type="text/css">@charset "UTF-8";.combox-option li.divider{display: none} .combox-option li+li.divider{display: block}</style>'),
          s.prototype = {
            init: function(e) {
              if (!e || this.inited)
                return this;
              this.inited = !0;
              var t, i = this;
              function s(e, t, n) {
                var i = e.option
                    , o = '<select name="' + e.name + '" ';
                if (t && (o += ' class="combox"',
                n && (o += ' data-category="' + n + '"'),
                    o += ' data-replace="' + e.replace + '"'),
                    o += ">",
                    t)
                  for (var r = 0; r < i.length; r++) {
                    var s = i[r];
                    o += '<optgroup label="' + s.title + '">';
                    for (var a = 0; a < s.items.length; a++)
                      o += '<option value="' + s.items[a].val + '">' + s.items[a].key + "</option>";
                    o += "</optgroup>"
                  }
                else
                  for (r = 0; r < i.length; r++)
                    o += '<option value="' + i[r].val + '">' + i[r].key + "</option>";
                return o += "</select>"
              }
              function a(e) {
                for (var t = e.option, n = "", i = 0; i < t.length; i++)
                  n += '<div><label><input type="checkbox" name="' + e.name + '" value="' + t[i].val + '">' + t[i].key + "</label></div>";
                return n
              }
              return this.elem.empty().append((t = e) && 0 != t.length ? function e(t, n) {
                for (var i = "<form><fieldset>", o = 0; o < t.length; o++) {
                  var r = t[o];
                  switch (i += n ? "<li>" : "<div>",
                  r.title && (i += "<label>" + r.title + "</label>"),
                      r.type) {
                    case "select":
                    case "combox":
                      i += s(r, "combox" == r.type, r.category);
                      break;
                    case "checkbox":
                      i += a(r);
                      break;
                    default:
                      0 < r.children.length && (i += e(r.children))
                  }
                  i += n ? "</li>" : "</div>"
                }
                return i + "</fieldset></form>"
              }(t, !0) : "").find("input,select:not(.combox)").bind("change", function() {
                if ("checkbox" == this.type) {
                  var e = i.elem.find("form").serializeArray()
                      , t = this.name;
                  i.report[this.name] = l.map(e, function(e) {
                    if (e.name == t)
                      return e.value
                  })
                } else
                  "SELECT" == this.tagName && (i.report[this.name] = this.value);
                i.options.change(i.report)
              }).end().find("select.combox").each(function() {
                var e = l(this)
                    , t = l("<span style='cursor: pointer;font-weight: bold;font-size: 110%;'>...</span>");
                e.before(t),
                    e.mCombox({
                      locale: i.options.locale,
                      optBtn: t
                    }).bind("change", function(e, t, n) {
                      i.report[this.name] = {
                        id: t,
                        name: n
                      },
                          i.options.change(i.report)
                    })
              }),
                  this
            },
            update: function(e) {
              return this.report = l.extend(this.report, e),
                  function(e, t) {
                    for (var n in t) {
                      var i = e[n];
                      if (i) {
                        var o = t[n];
                        Array.isArray(o) ? l.each(i, function() {
                          this.checked = r(this.value, o)
                        }) : "object" == typeof o ? l(i).mCombox("value", o.name) : i.value = o
                      }
                    }
                    function r(e, t) {
                      for (var n = 0; n < t.length; n++)
                        if (e == t[n])
                          return !0;
                      return !1
                    }
                  }(this.elem.find("form")[0], this.report),
                  this
            },
            disable: function(e) {
              return this.elem.find("fieldset").prop("disabled", e).find("select.combox").mCombox("disable", e),
                  this
            }
          },
          l.fn.mpcc = function(i) {
            var o = arguments
                , r = "!@~》#$%^";
            return this.map(function() {
              var e = "plugin_mpcc";
              l.data(this, e) || l.data(this, e, new s(this,i));
              var t = l(this).data(e);
              if (t[i]) {
                var n = t[i].apply(t, Array.prototype.slice.call(o, 1));
                n !== t && (r = n)
              }
            }),
                "!@~》#$%^" == r ? this : r
          }
    }(jQuery),
    function(l) {
      var s = "mCombox2"
          , n = {
        locale: "zh_CN",
        inputClass: "",
        disabled: !1,
        placeholder: "",
        defaultId: null,
        value: null,
        optBtn: null,
        replace: 1,
        sourceUrl: "/Account/Dict"
      };
      function a(e, t) {
        this.items = [],
            this.elem = l(e),
            this.options = l.extend({}, n, t),
            this.init()
      }
      function c(t, n, e) {
        var i = !0;
        t = e ? l(t).hide().tooltipster({
          theme: "tooltipster-shadow",
          interactive: !0,
          contentCloning: !1,
          trigger: "click",
          side: ["right", "top", "bottom", "left"],
          delay: 0,
          distance: 0,
          content: n.css("maxHeight", 500),
          trackOrigin: !0
        }) : l(t).after(n.hide().addClass("combox-float")).bind("click", function() {
          i && n.toggle()
        }),
            this.show = function(e) {
              e ? t.show() : t.hide()
            }
            ,
            this.showMenu = function(e) {
              e ? i && n.show() : n.hide()
            }
            ,
            this.disabled = function(e) {
              i = !e,
                  e ? (t.addClass("disabled"),
                      n.hide()) : t.removeClass("disabled")
            }
      }
      function u(e, t) {
        return '<li><a style="white-space: normal;cursor: pointer;" data-val="' + e + '">' + t + "</a></li>"
      }
      function d(e) {
        return '<li role="separator" class="divider"><span>' + e + "</span></li>"
      }
      function p(e, t) {
        e.style.height = "1px",
            e.style.height = (e.scrollHeight || 39) + (t ? 2 : 22) + "px"
      }
      l("head").append('<style type="text/css">@charset "UTF-8";.combox-option li.divider{display: none} .combox-option li+li.divider{display: block}</style>'),
          a.prototype = {
            init: function() {
              if (1 === this.options.replace) {
                var e = this.elem.attr("data-replace");
                "true" == e ? this.options.replace = !0 : "false" == e && (this.options.replace = !1)
              }
              var a = this
                  , t = l('<div style="position: relative" class="combox-group"><textarea  style="width: 100%;resize: none;" placeholder="' + this.options.placeholder + '" class="' + this.options.inputClass + '"></textarea>        <span style="position: absolute;bottom: 0;right: 0;padding: 0 8px 6px;cursor: pointer;display: none;font-weight: bold;font-size: 110%;">...</span></div>');
              !function(e, t) {
                var n = {
                  account: "/MoticAccount/Login"
                }
                    , i = document.getElementById("login_iframe_" + e);
                if (i)
                  return i.callbacks.push(t),
                  i.login && o(i.callbacks);
                function o(e) {
                  for (var t = 0; t < e.length; t++)
                    e[t]();
                  e.length = 0
                }
                (i = l("<iframe></iframe>").attr("id", "login_iframe_" + e).bind("load", function() {
                  -1 < this.src.indexOf(n[e]) && (i.login = !0,
                      o(i.callbacks))
                }).appendTo("body").attr("src", n[e])[0]).callbacks = [t]
              }("account", function() {
                a._loadRemote(function(e) {
                  var t = ""
                      , n = "name_" + a.options.locale;
                  t += d("title");
                  for (var i = 0; i < e.length; i++)
                    t += u(e[i].id, e[i][n]),
                        a._checkAndSetDefault(e[i].id, e[i][n]);
                  a.menu.find("ul").append(t),
                  0 < e.length && a.btn.show(!0)
                })
              }),
                  this.elem.after(t).hide(),
                  this.textarea = t.find("textarea").bind("input propertychange", function(e, t) {
                    p(this),
                        a.elem.html("").append('<option selected="selected" value="' + this.value + '"></option>'),
                        a.elem.trigger("change", [t, this.value])
                  }).val(this.options.value),
                  setTimeout(function() {
                    a.textarea.trigger("propertychange")
                  }, 1);
              var i, o, r, s, n = this.elem.find("optgroup").remove();
              return this.menu = l((i = n,
                  o = this._checkAndSetDefault,
                  r = this,
                  s = '<div style="max-width: 100%;width: 400px;"><span class="arrow1"></span><ul class="dropdown-menu combox-option" style="display: block;float: none;position: relative;border: 0;box-shadow: none;" class1="list-unstyled">',
                  i.each(function(e, t) {
                    var n = i.eq(e);
                    s += d(n.attr("label")),
                        n.find("option").each(function() {
                          s += u(this.value, this.innerText),
                              o.apply(r, [this.value, this.innerText])
                        })
                  }),
                  s += '</ul><div class="clearfix"></div></div>')).delegate("a", "click", function(e) {
                var t = l(this)
                    , n = t.text()
                    , i = n.length;
                if (!a.options.replace) {
                  var o = a.textarea.focus().prop("selectionStart")
                      , r = a.textarea.prop("selectionEnd")
                      , s = a.textarea.val();
                  n = s.substring(0, o) + n + s.substring(r),
                      i += o
                }
                a.textarea.val(n).trigger("propertychange", t.attr("data-val")),
                    a.btn.showMenu(!1),
                    function(e, t) {
                      if (e.setSelectionRange)
                        e.setSelectionRange(t, t);
                      else if (e.createTextRange) {
                        var n = e.createTextRange();
                        n.collapse(!0),
                            n.moveEnd("character", t),
                            n.moveStart("character", t),
                            n.select()
                      }
                    }(a.textarea[0], i)
              }),
                  this.btn = new c(this.options.optBtn,this.menu,!1),
              0 < n.find("option").length && (n = null,
                  this.btn.show(!0)),
              this.options.disabled && this.disable(!0),
                  this
            },
            disable: function(e) {
              return e ? (this.textarea.attr("disabled", "disabled"),
                  this.btn.disable(!0)) : (this.textarea.removeAttr("disabled"),
                  this.btn.disable(!1)),
                  this
            },
            value: function(e, t) {
              if (null == e && null == t)
                return this.textarea.val();
              if (null == e) {
                for (var n = 0, i = this.items; n < i.length; n++)
                  if (i[n].id == t) {
                    var o = this
                        , r = i[n].id
                        , s = i[n].text;
                    setTimeout(function() {
                      o.textarea.val(s).trigger("propertychange", r)
                    }, 1);
                    break
                  }
              } else
                this.textarea.val(e),
                    this.options.value = e;
              return p(this.textarea[0]),
                  this
            },
            addGroup: function(e, t) {
              for (var n = d(e), i = 0; i < t.length; i++)
                n += u(t[i].id, t[i].text);
              this.menu.find("ul.combox-option").prepend(n),
                  this.btn.show(!0)
            },
            _loadRemote: function(e) {
              if (this.options.category || (this.options.category = this.elem.attr("data-category"))) {
                var t = this.options.sourceUrl + "?category=" + this.options.category;
                return l.ajax({
                  dataType: "json",
                  url: t,
                  success: e
                }),
                    this
              }
            },
            _checkAndSetDefault: function(e, t) {
              if (this.items.push({
                id: e,
                text: t
              }),
              null === this.options.value && this.options.defaultId == e) {
                var n = this;
                setTimeout(function() {
                  n.textarea.val(t).trigger("propertychange", e)
                }, 1)
              }
            }
          },
          l.fn[s] = function(i) {
            var o = arguments
                , r = "!@~》#$%^";
            return this.map(function() {
              var e = "plugin_" + s;
              l.data(this, e) || l.data(this, e, new a(this,i));
              var t = l(this).data(e);
              if (t[i]) {
                var n = t[i].apply(t, Array.prototype.slice.call(o, 1));
                n !== t && (r = n)
              }
            }),
                "!@~》#$%^" == r ? this : r
          }
    }(jQuery),
    angular.module("gallery.app.training", ["gallery.base"]).service("mTraining", ["$resource", function(e) {
      return e("/Apps/Trainings", {}, {
        listUsers: {
          method: "GET",
          url: "/Apps/Trainings/Users",
          isArray: !0
        },
        listSlides: {
          method: "GET",
          url: "/Apps/Trainings/Slides",
          isArray: !0
        },
        listGroups: {
          method: "GET",
          url: "/Apps/Trainings/Groups",
          isArray: !0
        },
        addSpecimen: {
          method: "PUT",
          url: "/Apps/Trainings/:id/Objects"
        }
      })
    }
    ]).controller("trainingCtrl", ["$scope", "mTraining", function(s, a) {
      var l = {
        user: [],
        slide: []
      };
      s.selectChange = function(e, t, n) {
        var i = l[n];
        if ("ALL" === t) {
          if (i.length = 0,
              e)
            for (var o = s[n + "s"], r = 0; r < o.length; r++)
              i.push(o[r].id)
        } else if (e)
          i.push(t.id);
        else
          for (r = 0; r < i.length; r++)
            if (i[r] == t.id) {
              i.splice(r, 1);
              break
            }
        "user" == n ? s.changeUser() : s.changeSlide()
      }
          ,
          s.isChecked = function(e, t) {
            return -1 < l[t].indexOf(e)
          }
      ;
      var n = s.slideMap = {};
      s.changeUser = function() {
        var e = l.user;
        if (0 == e.length)
          return l.slide.length = 0,
              s.slides.length = 0,
              void s.changeSlide();
        s.slides = a.listSlides({
          users: e.join(",")
        }, function(e) {
          if (0 < e.length) {
            l.slide.length = 0,
                l.slide.push(e[0].id),
                s.changeSlide();
            for (var t = 0; t < e.length; t++)
              n[e[t].id] = e[t]
          }
        }),
            s.$broadcast("m:scrollShow:clear", "object")
      }
          ,
          s.changeSlide = function() {
            var e = l.slide;
            if (0 != e.length) {
              var t = l.user;
              s.groups = a.listGroups({
                users: t.join(","),
                slides: e.join(",")
              }, function(e) {
                s.$broadcast("m:scrollShow:show", "object")
              }),
                  s.$broadcast("m:scrollShow:clear", "object")
            } else
              for (var n = s.groups, i = n.length = 0; i < n.length; i++)
                for (var o = n[i], r = o.objects.length = 0; r < o.nodes.length; r++) {
                  o.nodes[r].objects.length = 0
                }
          }
          ,
          s.users = a.listUsers(function(e) {
            l.user.push(e[0].id),
                s.changeUser()
          });
      var i = [];
      s.select = function(e) {
        if (e.selected)
          i.push(e);
        else
          for (var t = 0; t < i.length; t++)
            i[t] == e && i.splice(t, 1)
      }
          ,
          s.addSpecimen = function() {
            a.addSpecimen({
              id: "4A6B419A-774B-E911-80C8-FF06A0F5F321"
            }, i, function() {
              for (var e = 0; e < i.length; e++)
                i[e].joined = !0;
              i.length = 0
            })
          }
    }
    ]),
    angular.module("gallery.sv", ["gallery.base"]).service("TaskInfo", ["$resource", function(e) {
      return e("/Apps/:appId/Tasks/:id/Info", {
        appId: "@appId",
        id: "@id"
      }, {
        update: {
          method: "PUT"
        }
      })
    }
    ]).controller("taskInfoCtrl", ["$scope", "$timeout", "TaskInfo", function(n, e, i) {
      var o = {};
      n.loadTask = function(e, t) {
        o[t];
        n.vm.editTask = null,
            i.get({
              appId: e,
              id: t
            }, function(e) {
              o[t] = e,
                  n.vm.editTask = angular.copy(e)
            })
      }
          ,
          n.updateTask = function() {
            i.update(n.vm.editTask, function() {
              angular.copy(n.vm.editTask, o[n.vm.id])
            })
          }
    }
    ]);
